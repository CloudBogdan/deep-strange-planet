{"version":3,"sources":["ts/managers/assets.ts","ts/engine/utils/math.ts","ts/engine/Asset.ts","ts/config.ts","ts/engine/Physics.ts","ts/engine/components/Point.ts","ts/messages.ts","ts/engine/components/Sprite.ts","ts/engine/components/Container.ts","ts/engine/events/Gamepad.ts","ts/engine/Renderer.ts","ts/engine/utils/noise.ts","ts/engine/Generator.ts","ts/engine/Game.ts","ts/engine/components/Text.ts","ts/engine/components/Group.ts","ts/engine/index.ts","ts/engine/components/Particles.ts","ts/objects/entities/Entity.ts","ts/engine/components/UI.ts","ts/objects/item/Item.ts","ts/objects/item/RobotItem.ts","ts/objects/entities/Robot.ts","ts/engine/components/Audio.ts","ts/objects/entities/Player.ts","ts/managers/level.ts","ts/objects/ores/Ore.ts","ts/objects/ores/Stone.ts","ts/objects/ores/FallingORe.ts","ts/objects/ores/CrackedStone.ts","ts/objects/ores/DeepStone.ts","ts/objects/raws/Raw.ts","ts/objects/raws/RawCidium.ts","ts/objects/ores/Cidium.ts","ts/names.ts","ts/objects/gear/Gear.ts","ts/objects/gear/recipes.ts","ts/objects/gear/Recycler.ts","ts/objects/raws/RawAntin.ts","ts/objects/raws/RawGradeCidium.ts","ts/objects/raws/RawNerius.ts","ts/objects/raws/RawOsmy.ts","ts/objects/raws/DangerRaw.ts","ts/objects/raws/RawRady.ts","ts/objects.ts","ts/objects/gear/Storage.ts","ts/managers/dome.ts","ts/objects/ores/Osmy.ts","ts/objects/ores/Basalt.ts","ts/objects/ores/Antin.ts","ts/objects/ores/DangerOre.ts","ts/objects/ores/Rady.ts","ts/objects/ores/BurntBasalt.ts","ts/objects/ores/Nerius.ts","ts/objects/ores/StonyGround.ts","ts/objects/ores/Destrony.ts","ts/objects/raws/RawManty.ts","ts/objects/ores/Manty.ts","ts/main.ts"],"names":[],"mappings":"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","file":"main.ae7c08b8.js","sourceRoot":"..\\src","sourcesContent":["import { Game } from \"../engine\"; // @ts-ignore\r\n// I can't setup declare module :(\r\nimport player_stay_img from \"../../images/player/stay.png\"; // @ts-ignore\r\nimport player_walk_0_img from \"../../images/player/walk/0.png\"; // @ts-ignore\r\nimport player_walk_1_img from \"../../images/player/walk/1.png\"; // @ts-ignore\r\nimport player_walk_2_img from \"../../images/player/walk/2.png\"; // @ts-ignore\r\n\r\nimport robot_stay_img from \"../../images/entities/robot/robot-stay.png\"; // @ts-ignore\r\n\r\nimport stone_img from \"../../images/ores/stone.png\"; // @ts-ignore\r\nimport stony_ground_img from \"../../images/ores/stony-ground.png\"; // @ts-ignore\r\nimport basalt_img from \"../../images/ores/basalt.png\"; // @ts-ignore\r\nimport deep_stone_img from \"../../images/ores/deep-stone.png\"; // @ts-ignore\r\nimport burnt_basalt_img from \"../../images/ores/burnt-basalt.png\"; // @ts-ignore\r\nimport destrony_img from \"../../images/ores/destrony.png\"; // @ts-ignore\r\nimport manty_img from \"../../images/ores/manty.png\"; // @ts-ignore\r\n// import stone_1_img from \"../../images/ores/stone-1.png\"; // @ts-ignore\r\n// import stone_2_img from \"../../images/ores/stone-2.png\"; // @ts-ignore\r\n// import stone_3_img from \"../../images/ores/stone-3.png\"; // @ts-ignore\r\n// import stone_4_img from \"../../images/ores/stone-4.png\"; // @ts-ignore\r\nimport cracked_stone_img from \"../../images/ores/cracked-stone.png\"; // @ts-ignore\r\n\r\nimport cidium_img from \"../../images/ores/cidium.png\"; // @ts-ignore\r\nimport osmy_img from \"../../images/ores/osmy.png\"; // @ts-ignore\r\nimport antin_img from \"../../images/ores/antin.png\"; // @ts-ignore\r\nimport rady_img from \"../../images/ores/rady.png\"; // @ts-ignore\r\nimport nerius_img from \"../../images/ores/nerius.png\"; // @ts-ignore\r\n\r\nimport raw_cidium_img from \"../../images/raw/raw-cidium.png\"; // @ts-ignore\r\nimport raw_grade_cidium_img from \"../../images/raw/raw-grade-cidium.png\"; // @ts-ignore\r\nimport raw_osmy_img from \"../../images/raw/raw-osmy.png\"; // @ts-ignore\r\nimport raw_antin_img from \"../../images/raw/raw-antin.png\"; // @ts-ignore\r\nimport raw_rady_img from \"../../images/raw/raw-rady.png\"; // @ts-ignore\r\nimport raw_nerius_img from \"../../images/raw/raw-nerius.png\"; // @ts-ignore\r\nimport raw_manty_img from \"../../images/raw/raw-manty.png\"; // @ts-ignore\r\n\r\nimport ground_img from \"../../images/environment/ground.png\"; // @ts-ignore\r\nimport dome_img from \"../../images/environment/dome.png\"; // @ts-ignore\r\n\r\nimport gear_storage_1_img from \"../../images/gear/gear-storage-1.png\"; // @ts-ignore\r\nimport gear_recycler_1_img from \"../../images/gear/gear-recycler-1.png\"; // @ts-ignore\r\nimport gear_storage_1_outline_img from \"../../images/gear/gear-storage-1-outline.png\"; // @ts-ignore\r\nimport gear_recycler_1_outline_img from \"../../images/gear/gear-recycler-1-outline.png\"; // @ts-ignore\r\n\r\nimport interact_img from \"../../images/ui/interact.png\"; // @ts-ignore\r\nimport close_img from \"../../images/ui/close.png\"; // @ts-ignore\r\nimport button_img from \"../../images/ui/button.png\"; // @ts-ignore\r\nimport tools_img from \"../../images/ui/tools.png\"; // @ts-ignore\r\nimport bottle_img from \"../../images/ui/bottle.png\"; // @ts-ignore\r\nimport damage_img from \"../../images/ui/damage.png\"; // @ts-ignore\r\nimport level_up_img from \"../../images/ui/level-up.png\"; // @ts-ignore\r\nimport storage_ui_img from \"../../images/ui/storage-ui.png\"; // @ts-ignore\r\nimport recycler_ui_img from \"../../images/ui/recycler-ui.png\"; // @ts-ignore\r\nimport description_ui_img from \"../../images/ui/description-ui.png\"; // @ts-ignore\r\n\r\n// > Audio\r\nimport stone_hit_mp from \"../../audio/stone-hit.mp3\"; // @ts-ignore\r\nimport stone_break_mp from \"../../audio/stone-break.mp3\"; // @ts-ignore\r\nimport step1_mp from \"../../audio/steps/1.mp3\"; // @ts-ignore\r\nimport step2_mp from \"../../audio/steps/2.mp3\"; // @ts-ignore\r\nimport step3_mp from \"../../audio/steps/3.mp3\"; // @ts-ignore\r\nimport storage_mp from \"../../audio/storage.mp3\"; // @ts-ignore\r\nimport store_mp from \"../../audio/store.mp3\"; // @ts-ignore\r\nimport craft_mp from \"../../audio/craft.mp3\"; // @ts-ignore\r\n\r\nexport function initAssets(game: Game) {\r\n    \r\n    // > Player\r\n    game.loadAsset(\"player-stay\", [player_stay_img]);\r\n    game.loadAsset(\"player-walk\", [\r\n        player_walk_0_img,\r\n        player_walk_1_img,\r\n        player_walk_2_img,\r\n        player_stay_img,\r\n    ]);\r\n\r\n    // > Entities\r\n    game.loadAsset(\"robot-stay\", [robot_stay_img]);\r\n\r\n    // > Ores\r\n    game.loadAsset(\"stone\", [stone_img]);\r\n    game.loadAsset(\"stony-ground\", [stony_ground_img]);\r\n    game.loadAsset(\"basalt\", [basalt_img]);\r\n    game.loadAsset(\"deep-stone\", [deep_stone_img]);\r\n    game.loadAsset(\"burnt-basalt\", [burnt_basalt_img]);\r\n    game.loadAsset(\"destrony\", [destrony_img]);\r\n    game.loadAsset(\"manty\", [manty_img]);\r\n    // game.loadAsset(\"stone-1\", [stone_1_img]);\r\n    // game.loadAsset(\"stone-2\", [stone_2_img]);\r\n    // game.loadAsset(\"stone-3\", [stone_3_img]);\r\n    // game.loadAsset(\"stone-4\", [stone_4_img]);\r\n    game.loadAsset(\"cracked-stone\", [cracked_stone_img]);\r\n\r\n    game.loadAsset(\"cidium\", [cidium_img]);\r\n    game.loadAsset(\"osmy\", [osmy_img]);\r\n    game.loadAsset(\"antin\", [antin_img]);\r\n    game.loadAsset(\"rady\", [rady_img]);\r\n    game.loadAsset(\"nerius\", [nerius_img]);\r\n\r\n    game.loadAsset(\"raw-cidium\", [raw_cidium_img]);\r\n    game.loadAsset(\"raw-grade-cidium\", [raw_grade_cidium_img]);\r\n    game.loadAsset(\"raw-osmy\", [raw_osmy_img]);\r\n    game.loadAsset(\"raw-antin\", [raw_antin_img]);\r\n    game.loadAsset(\"raw-rady\", [raw_rady_img]);\r\n    game.loadAsset(\"raw-nerius\", [raw_nerius_img]);\r\n    game.loadAsset(\"raw-manty\", [raw_manty_img]);\r\n\r\n    game.loadAsset(\"ground\", [ground_img])\r\n    game.loadAsset(\"dome\", [dome_img])\r\n\r\n    game.loadAsset(\"gear-storage-1\", [gear_storage_1_img])\r\n    game.loadAsset(\"gear-recycler-1\", [gear_recycler_1_img])\r\n    game.loadAsset(\"gear-storage-1-outline\", [gear_storage_1_outline_img])\r\n    game.loadAsset(\"gear-recycler-1-outline\", [gear_recycler_1_outline_img])\r\n\r\n    game.loadAsset(\"interact\", [interact_img])\r\n    game.loadAsset(\"close\", [close_img])\r\n    game.loadAsset(\"button\", [button_img])\r\n    game.loadAsset(\"tools\", [tools_img])\r\n    game.loadAsset(\"bottle\", [bottle_img])\r\n    game.loadAsset(\"damage\", [damage_img])\r\n    game.loadAsset(\"storage-ui\", [storage_ui_img])\r\n    game.loadAsset(\"level-up\", [level_up_img])\r\n    game.loadAsset(\"recycler-ui\", [recycler_ui_img])\r\n    game.loadAsset(\"description-ui\", [description_ui_img])\r\n\r\n    // > Audio\r\n    game.loadAsset(\"stone-hit\", stone_hit_mp, \"audio\")\r\n    game.loadAsset(\"stone-break\", stone_break_mp, \"audio\")\r\n    game.loadAsset(\"step-1\", step1_mp, \"audio\")\r\n    game.loadAsset(\"step-2\", step2_mp, \"audio\")\r\n    game.loadAsset(\"step-3\", step3_mp, \"audio\")\r\n    game.loadAsset(\"storage\", storage_mp, \"audio\")\r\n    game.loadAsset(\"store\", store_mp, \"audio\")\r\n    game.loadAsset(\"craft\", craft_mp, \"audio\")\r\n\r\n}","import { Axes, Direction } from \"../../types\";\r\nimport { Asset, AssetType } from \"../Asset\";\r\n\r\nexport class Vector2 {\r\n    x: number\r\n    y: number\r\n    \r\n    constructor(x?: number, y?: number) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    set(x?: number, y?: number): Vector2 {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n        \r\n        return this;\r\n    }\r\n    copy(vec: Vector2): Vector2 {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n        return this;\r\n    }\r\n    normalize(): Vector2 {\r\n        const v = new Vector2(this.x, this.y);\r\n\r\n        const a = Math.sqrt(v.x ** 2 + v.y ** 2);\r\n        v.x /= a || 1;\r\n        v.y /= a || 1;\r\n\r\n        return v;\r\n    }\r\n    distance(vec: Vector2): number {\r\n        return Math.sqrt((this.x - vec.x) ** 2 + (this.y - vec.y) ** 2);\r\n    }\r\n    expand(): Vector2 {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    apply(func: (v: number)=> number) {\r\n        return new Vector2(func(this.x), func(this.y));\r\n    }\r\n\r\n    add(vec: Vector2): Vector2 {\r\n        return new Vector2(this.x + vec.x, this.y + vec.y);\r\n    }\r\n    sub(vec: Vector2): Vector2 {\r\n        return new Vector2(this.x - vec.x, this.y - vec.y);\r\n    }\r\n    mul(value: number): Vector2 {\r\n        return new Vector2(this.x * value, this.y * value);\r\n    }\r\n    div(value: number): Vector2 {\r\n        return new Vector2(this.x / value, this.y / value);\r\n    }\r\n\r\n    lerp(to: Vector2, time: number): Vector2 {\r\n        this.x = this.x + (to.x - this.x) * time;\r\n        this.y = this.y + (to.y - this.y) * time;\r\n        \r\n        return this;\r\n    }\r\n\r\n    static add(vec1: Vector2, vec2: Vector2): Vector2 {\r\n        return new Vector2(vec1.x + vec2.x, vec1.y + vec2.y);\r\n    }\r\n    static sub(vec1: Vector2, vec2: Vector2): Vector2 {\r\n        return new Vector2(vec1.x - vec2.x, vec1.y - vec2.y);\r\n    }\r\n    \r\n    static zero(): Vector2 {\r\n        return new Vector2();\r\n    }\r\n    static all(value?: number): Vector2 {\r\n        return new Vector2(value || 1, value || 1);\r\n    }\r\n    static compare(vec1: Vector2, vec2: Vector2): boolean {\r\n        return vec1.x == vec2.x && vec1.y == vec2.y;\r\n    }\r\n}\r\n\r\nexport function assetIsValid(asset: Asset | undefined | null, type: AssetType): boolean {\r\n    return asset != null && asset.type != null && asset.type == type;\r\n}\r\nexport function safeValue<T>(value: T | undefined, safe: T): T {\r\n    return value === undefined ? safe : value;\r\n}\r\nexport function asImage(asset: Asset | undefined | null): HTMLImageElement | undefined {\r\n    if (!asset) return;\r\n\r\n    if (assetIsValid(asset as any, \"image\"))\r\n        return ((asset as Asset).element as HTMLImageElement[])[0];\r\n}\r\nexport function asAudio(asset: Asset | undefined | null): HTMLAudioElement | undefined {\r\n    if (!asset) return;\r\n\r\n    if (assetIsValid(asset as any, \"audio\"))\r\n        return (asset as Asset).element as HTMLAudioElement;\r\n}\r\n\r\nexport function standardName(name: string): string {\r\n    return name.trim().split(\" \").join(\"-\").toLocaleLowerCase();\r\n}\r\nexport function compareNames(name1: string, name2: string): boolean {\r\n    return standardName(name1) == standardName(name2);\r\n}\r\nexport function buildName(...args: string[]) {\r\n    return [...args].join(\" \");\r\n}\r\nexport function wrapText(text: string, maxLength: number): { text: string, wrapCount: number } {\r\n    let result: string = \"\";\r\n    let wrapCount = 0;\r\n\r\n    for (let i = 0; i < text.length; i ++) {\r\n\r\n        let letter = text[i];\r\n        \r\n        if ((i-1) > 0 && (i-1) % maxLength == 0) {\r\n            if (text[i] != \" \")\r\n                result += `-\\n`;\r\n            else\r\n                result += `\\n`;\r\n\r\n            wrapCount ++;\r\n            letter = text[i].trim();\r\n        }\r\n        result += letter;\r\n        \r\n    }\r\n        \r\n    return {\r\n        text: result,\r\n        wrapCount\r\n    };\r\n}\r\nexport function axesToDirection(axes: Axes): Direction {\r\n    if (axes == \"down\")\r\n        return \"bottom\";\r\n    else if (axes == \"up\")\r\n        return \"top\";\r\n    else\r\n        return axes;\r\n}\r\n\r\nexport function lerp(from: number, to: number, time: number): number {\r\n    return from + (to - from) * time;\r\n}\r\nexport function random(from: number, to: number): number {\r\n    return Math.random() * (to - from) + from;    \r\n}\r\nexport function chance(percent: number): boolean {\r\n    return Math.floor(random(0, 101)) <= percent;\r\n}","import { standardName } from \"./utils/math\";\r\n\r\nexport type AssetType = \"image\" | \"audio\"; \r\n\r\nexport class Asset {\r\n    name: string\r\n    src: string | string[]\r\n    type: AssetType\r\n    element: HTMLAudioElement | HTMLImageElement[]\r\n    // element: PIXI.Texture | HTMLAudioElement | PIXI.Texture[]\r\n    \r\n    constructor(name: string, src: string | string[], type?: AssetType) {\r\n        this.name = standardName(name);\r\n        this.src = src;\r\n        this.type = type || \"image\";\r\n        this.element = [];\r\n\r\n        if (this.type == \"image\") {\r\n            this.element = (this.src as string[]).map(s=> {\r\n                const i = new Image();\r\n                i.src = s;\r\n                return i;\r\n            });\r\n        }\r\n        else if (type == \"audio\") {\r\n            this.element = new Audio(this.src as string);\r\n        }\r\n    }\r\n}","import { ToolLevel } from \"./objects/entities/Player\";\r\nimport { GearLevel } from \"./objects/gear/Gear\";\r\n\r\nexport enum Config {\r\n    // World size and chunks size in blocks\r\n    WORLD_WIDTH = 25,\r\n    WORLD_HEIGHT = 225,\r\n    CHUNK_SIZE = 4,\r\n    \r\n    SPRITE_SCALE = 5,\r\n    SPRITE_PIXEL_SIZE = 16,\r\n    SPRITE_SIZE = SPRITE_PIXEL_SIZE * SPRITE_SCALE,\r\n    PARTICLES_GRAVITY = .4,\r\n    WORLD_X_CENTER = WORLD_WIDTH * SPRITE_SIZE / 2, // In pixels\r\n\r\n    ROBOT_PICKUP_DISTANCE = SPRITE_SIZE,\r\n    ROBOT_DAMAGE = 4,\r\n    ROBOT_HIT_SPEED = 10,\r\n    ROBOT_ALLOW_PICKUP_DELAY = 20,\r\n\r\n    PICKUP_DISTANCE = 50,\r\n    WIRE_LENGTH = 60,\r\n    GEAR_INTERACT_DISTANCE = 100,\r\n    DOME_DIAMETER = SPRITE_SIZE * 6,\r\n    GROUND_HEIGHT = SPRITE_SIZE * 2,\r\n    \r\n    ALLOW_DARK = 1,\r\n    RAW_LIVE_TIME = 400,\r\n    ORE_FALL_DELAY = 30,\r\n    DEFAULT_ANIMATION_SPEED = 8,\r\n}\r\nexport enum GeneratorConfig {\r\n    LAYERS_BLEND_HEIGHT = 10,\r\n    BASALT_LAYER_HEIGHT = 150,\r\n    BURNT_BASALT_LAYER_HEIGHT = Config.WORLD_HEIGHT - 5,\r\n}\r\nexport enum Color {\r\n    STONE_LAYER_COLOR = \"#090d23\",\r\n    BASALT_LAYER_COLOR = \"#1b1d27\",\r\n    BURNT_BASALT_LAYER_COLOR = \"#040508\",\r\n\r\n    WHITE = \"#fff\",\r\n    BLACK = \"#0f1531\",\r\n    GREY = \"#2c2f3d\",\r\n    DARK_GREY = \"#13151e\",\r\n    YELLOW = \"#fbc67e\",\r\n    ORANGE = \"#ff935c\",\r\n    BLUE = \"#b9c5ff\",\r\n    RED = \"#fb7e88\",\r\n    GREEN = \"#6aff81\",\r\n    YELLOW_LIGHT = \"#fde3bf\",\r\n    BLUE_LIGHT = \"#e0e6ff\",\r\n    RED_LIGHT = \"#f9cace\",\r\n    GREEN_LIGHT = \"#d4ffdb\",\r\n}\r\nexport const OreSettings: { [key: string]: { hp: number, tool?: ToolLevel } } = {\r\n    \"stone\": { hp: 10 },\r\n    \"stony-ground\": { hp: 8 },\r\n    \"antin\": { hp: 52, tool: 3 },\r\n    \"basalt\": { hp: 40, tool: 3 },\r\n    \"burnt-basalt\": { hp: 80, tool: 4 },\r\n    \"manty\": { hp: 108, tool: 4 },\r\n    \"cidium\": { hp: 20 },\r\n    \"cracked-stone\": { hp: 6 },\r\n    \"deep-stone\": { hp: 26, tool: 2 },\r\n    \"osmy\": { hp: 36, tool: 2 },\r\n    \"nerius\": { hp: 32, tool: 2 },\r\n    \"rady\": { hp: 58, tool: 4 },\r\n}\r\nexport const ItemSettings: { [key: string]: { lineColor: Color, storage: GearLevel } } = {\r\n    \"raw-cidium\": {\r\n        lineColor: Color.YELLOW_LIGHT,\r\n        storage: 1\r\n    },\r\n    \"raw-grade-cidium\": {\r\n        lineColor: Color.YELLOW_LIGHT,\r\n        storage: 1\r\n    },\r\n    \"raw-osmy\": {\r\n        lineColor: Color.BLUE_LIGHT,\r\n        storage: 1\r\n    },\r\n    \"raw-antin\": {\r\n        lineColor: Color.RED_LIGHT,\r\n        storage: 3\r\n    },\r\n    \"raw-rady\": {\r\n        lineColor: Color.GREEN_LIGHT,\r\n        storage: 3\r\n    },\r\n    \"raw-nerius\": {\r\n        lineColor: Color.WHITE,\r\n        storage: 2\r\n    },\r\n    \"raw-manty\": {\r\n        lineColor: Color.RED_LIGHT,\r\n        storage: 3\r\n    },\r\n}","import { Config } from \"../config\";\r\nimport { Point } from \"./components/Point\";\r\nimport { Game } from \"./Game\";\r\nimport { Vector2 } from \"./utils/math\";\r\n\r\nexport type Collide = {\r\n    id: Point[\"id\"] | null\r\n    right: boolean\r\n    left: boolean\r\n    top: boolean\r\n    bottom: boolean\r\n    any: boolean\r\n}\r\nexport type ColliderType = \"solid\" | \"dynamic\" | \"none\";\r\nexport class Collider {\r\n    type: ColliderType\r\n    \r\n    width: number\r\n    height: number\r\n    offset: Vector2\r\n\r\n    collidable: boolean\r\n    collidesWith: Collide | null\r\n    parent: Point\r\n\r\n    constructor(parent: Point) {\r\n        this.type = \"dynamic\";\r\n\r\n        this.width = Config.SPRITE_PIXEL_SIZE * Config.SPRITE_SCALE;\r\n        this.height = Config.SPRITE_PIXEL_SIZE * Config.SPRITE_SCALE;\r\n        this.offset = new Vector2();\r\n\r\n        this.collidable = true;\r\n        this.collidesWith = null;\r\n        this.parent = parent;\r\n\r\n    }\r\n}\r\n\r\nexport class Physics {\r\n    game: Game\r\n    \r\n    constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    collide(point1: Point, point2: Point): Collide {\r\n\r\n        // if (this.game.camera.distance(point1.position) < 300 && this.game.camera.distance(point2.position) < 300)\r\n        //     return {\r\n        //         id: null, any: false,\r\n        //         right: false, left: false,\r\n        //         top: false, bottom: false\r\n        //     }\r\n        \r\n        const\r\n            pos1 = Vector2.add(point1.position, point1.collider.offset).add(point1.velocity),\r\n            pos2 = Vector2.add(point2.position, point2.collider.offset).add(point2.velocity);\r\n        const\r\n            w1 = point1.collider.width / 2,\r\n            w2 = point2.collider.width / 2;\r\n        const\r\n            h1 = point1.collider.height / 2,\r\n            h2 = point2.collider.height / 2;\r\n        const valid = point1.id != point2.id;\r\n        const horizontal = (\r\n            ((pos1.x + w1) > (pos2.x - w2)) && // Right\r\n            ((pos1.x - w1) < (pos2.x + w2)) // Left\r\n        )\r\n        const vertical = (\r\n            ((pos1.y + h1) > (pos2.y - h2)) && // Bottom\r\n            ((pos1.y - h2) < (pos2.y + h2)) // Top\r\n        ) && valid;\r\n\r\n        const locationX = Math.abs(Math.sqrt((pos1.x - pos2.x) ** 2));\r\n        const locationY = Math.abs(Math.sqrt((pos1.y - pos2.y) ** 2));\r\n\r\n        // Right\r\n        let right = (\r\n            ((pos1.x + w1) > (pos2.x - w2)) && pos2.x > pos1.x\r\n        ) && vertical && (locationX > locationY);\r\n        // Left\r\n        let left = (\r\n            ((pos1.x - w1) < (pos2.x + w2)) && pos1.x > pos2.x\r\n        ) && vertical && (locationX > locationY);\r\n        \r\n        // Top\r\n        let top = (\r\n            ((pos1.y - h1) < (pos2.y + h2)) && pos1.y > pos2.y\r\n        ) && horizontal && (locationY > locationX);\r\n        // Bottom\r\n        let bottom = (\r\n            ((pos1.y + h1) > (pos2.y - h2)) && pos2.y > pos1.y\r\n        ) && horizontal && (locationY > locationX);\r\n\r\n        let any = right || left || top || bottom;\r\n        \r\n        return {\r\n            id: point2?.id || null, any,\r\n            right, left,\r\n            top, bottom\r\n        };\r\n    }\r\n    \r\n    update() {\r\n        const children = this.game.children.filter(child=> (child.collider.type != \"none\" && child.collider.collidable));\r\n        \r\n        for (let i = 0; i < children.length; i ++) {\r\n            for (let j = 0; j < children.length; j ++) {                \r\n                this.collideWith(children[i], children[j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    collideWith(collider1: Point, collider2: Point) {\r\n        \r\n        let allowCollide = true \r\n        \r\n        if (!collider2.collider.collidable && collider1.collider.type == \"dynamic\")\r\n            allowCollide = false;\r\n\r\n        if (allowCollide)\r\n            if (collider1.collider.type == \"dynamic\" && collider2.collider.type == \"solid\") {\r\n\r\n                const collide = this.collide(collider1, collider2);\r\n                \r\n                const col1 = collider1.collider;\r\n                const col2 = collider2.collider;\r\n                \r\n                // Right\r\n                if (collide.right && collider1.velocity.x > 0) {\r\n                    collider1.position.x = collider2.position.x - col2.width / 2 - col1.width / 2 + 1 - col1.offset.x;\r\n                    collider1.velocity.x = 0;\r\n                }\r\n                // Left\r\n                if (collide.left && collider1.velocity.x < 0) {\r\n                    collider1.position.x = collider2.position.x + col2.width / 2 + col1.width / 2 - 1 - col1.offset.x;\r\n                    collider1.velocity.x = 0;\r\n                }\r\n\r\n                // Top\r\n                if (collide.top && collider1.velocity.y < 0) {\r\n                    collider1.position.y = collider2.position.y + col2.height / 2 + col1.height / 2 - 1;\r\n                    collider1.velocity.y = 0;\r\n                } \r\n                // Bottom\r\n                if (collide.bottom && collider1.velocity.y > 0) {\r\n                    collider1.position.y = collider2.position.y - col2.height / 2 - col1.height / 2 + 1;\r\n                    collider1.velocity.y = 0;\r\n                }\r\n\r\n                // console.log(collider2.id);\r\n                if (collide.any) {\r\n                    // if ((collider1.velocity.x != 0 || collider1.velocity.y != 0))\r\n                        collider1.collider.collidesWith = {...collide};\r\n                        // collider1.collider.otherColliders = [collider2];\r\n                }\r\n                // else\r\n                //     collider1.collider.collidesWith = null;\r\n                    // collider1.collider.otherColliders = [];\r\n\r\n            }\r\n    }\r\n}","import { ComponentType } from \"../../types\";\r\nimport { Game } from \"../Game\";\r\nimport { Collider, ColliderType } from \"../Physics\";\r\nimport { Renderer } from \"../Renderer\";\r\nimport { standardName as standardName, Vector2 } from \"../utils/math\";\r\n\r\nlet __id = 0;\r\n\r\nexport type IPointProps = {\r\n    position?: Vector2\r\n    rotation?: number\r\n    scale?: Vector2\r\n    layer?: string\r\n\r\n    colliderType?: ColliderType\r\n\r\n    group?: string | null\r\n}\r\n\r\nexport class Point {\r\n    id: string\r\n    type: ComponentType\r\n    name: string\r\n    group: string | null\r\n    inited: boolean\r\n    layer: string\r\n    \r\n    velocity: Vector2\r\n    acceleration: Vector2\r\n    position: Vector2\r\n    rotation: number\r\n    scale: Vector2\r\n\r\n    collider: Collider\r\n    \r\n    constructor(name: string, props?: IPointProps) {\r\n        this.id = `${ name }-${ __id ++ }`;\r\n        this.type = \"point\";\r\n        this.name = standardName(name);\r\n        this.group = props?.group ? standardName(props.group) : null;\r\n        this.inited = false;\r\n        this.layer = props?.layer || \"game\";\r\n\r\n        this.position = props?.position || Vector2.zero();\r\n        this.velocity = Vector2.zero();\r\n        this.acceleration = Vector2.all();\r\n        this.rotation = props?.rotation || 0;\r\n        this.scale = props?.scale || Vector2.all();\r\n\r\n        this.collider = new Collider(this);\r\n        this.collider.type = props?.colliderType || \"dynamic\";\r\n    }\r\n    \r\n    init(game: Game) {\r\n        this.inited = true;\r\n    }\r\n    update(game: Game) {\r\n        this.velocity.x *= this.acceleration.x;\r\n        this.velocity.y *= this.acceleration.y;\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n    }\r\n    render(game: Game, renderer: Renderer) {\r\n    }\r\n\r\n    collideWidth(game: Game, point: Point | undefined) {\r\n\r\n        if (!point) return;\r\n        if (point.position.distance(this.position) > 200) return;\r\n        \r\n        let allowCollide = true\r\n        \r\n        if (!this.collider.collidable && point.collider.type == \"dynamic\" || !point.collider.collidable)\r\n            allowCollide = false;\r\n\r\n        if (allowCollide)\r\n            if (point.collider.type == \"dynamic\" && this.collider.type == \"solid\") {\r\n\r\n                const collide = game.physics.collide(point, this as any);\r\n                \r\n                const col1 = point.collider;\r\n                const col2 = this.collider;\r\n                \r\n                // Right\r\n                if (collide.right && point.velocity.x > 0) {\r\n                    point.position.x = this.position.x - col2.width / 2 - col1.width / 2 + 1 - col1.offset.x;\r\n                    point.velocity.x = 0;\r\n                }\r\n                // Left\r\n                if (collide.left && point.velocity.x < 0) {\r\n                    point.position.x = this.position.x + col2.width / 2 + col1.width / 2 - 1 - col1.offset.x;\r\n                    point.velocity.x = 0;\r\n                }\r\n\r\n                // Top\r\n                if (collide.top && point.velocity.y < 0) {\r\n                    point.position.y = this.position.y + col2.height / 2 + col1.height / 2 - 1;\r\n                    point.velocity.y = 0;\r\n                } \r\n                // Bottom\r\n                if (collide.bottom && point.velocity.y > 0) {\r\n                    point.position.y = this.position.y - col2.height / 2 - col1.height / 2 + 1;\r\n                    point.velocity.y = 0;\r\n                }\r\n\r\n                if (collide.any) {\r\n                    point.collider.collidesWith = {...collide};\r\n                }\r\n\r\n            }\r\n        \r\n    }\r\n}","export default {\r\n    err: {\r\n        animationLoadError: (name: string)=> `Failed to load asset \"${ name }\"`,\r\n        audioPlayError: (name: string)=> `Failed to play audio asset \"${ name }\"`,\r\n    }\r\n}","import { IPointProps, Point } from \"./Point\";\r\nimport { Game } from \"..\";\r\nimport { asImage, assetIsValid, Vector2 } from \"../utils/math\";\r\nimport messages from \"../../messages\";\r\nimport { Config } from \"../../config\";\r\nimport { Renderer } from \"../Renderer\";\r\n\r\nexport type ISpriteProps = {\r\n    width?: number\r\n    height?: number\r\n\r\n    flip?: { x: boolean, y: boolean }\r\n    repeat?: number\r\n} & IPointProps;\r\n\r\nexport class Sprite extends Point {\r\n    width: number\r\n    height: number\r\n\r\n    offset: Vector2\r\n    flip: { x: boolean, y: boolean }\r\n    repeat: number\r\n\r\n    assetName: string\r\n    texture: HTMLImageElement | null | undefined;\r\n    visible: boolean\r\n    opacity: number\r\n    \r\n    frame: number\r\n    \r\n    constructor(name: string, assetName: string, props?: ISpriteProps) {\r\n        super(name, props);\r\n        this.type = \"sprite\";\r\n\r\n        this.width = props?.width || 1;\r\n        this.height = props?.height || 1;\r\n\r\n        this.offset = Vector2.zero();\r\n        this.flip = props?.flip || { x: false, y: false };\r\n        this.repeat = props?.repeat || 1;\r\n        this.opacity = 1;\r\n\r\n        this.assetName = assetName;\r\n        this.texture = null;\r\n        this.visible = true;\r\n\r\n        this.frame = 0;\r\n        \r\n    }\r\n    \r\n    init(game: Game) {\r\n        super.init(game);\r\n        \r\n        this.updateAsset(game);\r\n    }\r\n    \r\n    updateAsset(game: Game) {\r\n\r\n        const asset = game.getAssetByName(this.assetName);\r\n        if (assetIsValid(asset, \"image\") && asset)\r\n            this.texture = asImage(asset);\r\n        else \r\n            console.error(messages.err.animationLoadError(this.assetName));\r\n        \r\n    }\r\n    update(game: Game) {\r\n        super.update(game);\r\n    }\r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n\r\n        if (this.texture && this.visible)\r\n            game.renderer.drawSprite({\r\n                ...this,\r\n                texture: this.texture\r\n            });\r\n    }\r\n\r\n    playAnimation(game: Game, assetName: string, speed?: number) {\r\n        const asset = game.getAssetByName(assetName);\r\n        if (!assetIsValid(asset, \"image\")) {\r\n            console.error(messages.err.animationLoadError(assetName));\r\n            return;\r\n        }\r\n\r\n        const el = asset!.element as HTMLImageElement[];\r\n        \r\n        if (game.clock.elapsed % (speed || Config.DEFAULT_ANIMATION_SPEED) == 0) {\r\n            this.texture = el.length == 1 ? el[0] : el[this.frame];\r\n            this.frame ++;\r\n        }\r\n        if (this.frame > el.length - 1 || el.length == 1)\r\n            this.frame = 0;\r\n    }\r\n}","import { Sprite, ISpriteProps } from \"./Sprite\";\r\nimport { Game } from \"../Game\";\r\nimport { Point, IPointProps } from \"./Point\";\r\nimport { compareNames } from \"../utils/math\";\r\nimport { Group } from \"./Group\";\r\n\r\nexport class Container {\r\n    children: Point[]\r\n\r\n    constructor() {\r\n        this.children = [];\r\n    }\r\n\r\n    createPoint(name: Point[\"name\"], props?: IPointProps): Point {\r\n        return this.add(new Point(name, props));\r\n    }\r\n    createSprite(name: Sprite[\"name\"], assetName: Sprite[\"assetName\"], props?: ISpriteProps): Sprite {\r\n        return this.add(new Sprite(name, assetName, props)) as Sprite;\r\n    }\r\n\r\n    getChildrenByName<T>(name: Point[\"name\"]): T[] {\r\n        return (this.children.filter(child=> child.name.indexOf(name) >= 0) as any[]) as T[];\r\n    }\r\n    getChildById<T>(id: Point[\"id\"] | null, expandAll?: boolean): T | undefined {\r\n        // if (id) {\r\n        //     if (expandAll) {\r\n        //         let b: any[] = [];\r\n        //         this.children.map(c=> c.type == \"group\" ? b = (c as any).children : null);\r\n        //         return [...this.children, ...b].find(child=> child.id ? child.id.indexOf(id) >= 0 : null) as T | undefined;\r\n        //     } else\r\n        //         return this.children.find(child=> child.id.indexOf(id) >= 0) as T | undefined;\r\n        // }\r\n        if (id)\r\n            return this.children.find(child=> child.id.indexOf(id) >= 0) as T | undefined;\r\n    }\r\n    removeChildById(id: Point[\"id\"]) {\r\n        this.children = this.children.filter(child=> !compareNames(child.id, id));\r\n    }\r\n    removeChildrenByGroupName(group: string) {\r\n        this.children = this.children.filter(child=> child.group ? !compareNames(child.group, group) : true);\r\n    }\r\n    \r\n    add<T>(child: Point | Group): T {\r\n        this.children.push(child as any);\r\n        return child as any;\r\n    }\r\n\r\n    initChildren(game: Game) {\r\n        this.children.filter(child=> !child.inited).map(child=> child.init(game));\r\n    }\r\n    callChildren(method: string, game: Game, args?: any) {\r\n        if (args)\r\n            this.children.map(child=> (child as any)[method](game, args));\r\n        else\r\n            this.children.map(child=> (child as any)[method](game));\r\n    }\r\n}","export class Gamepad {\r\n    eventKeys: {\r\n        [name: string]: string[]\r\n    }\r\n    \r\n    keys: {\r\n        right: boolean\r\n        left: boolean\r\n        up: boolean\r\n        down: boolean\r\n        enter: boolean\r\n    }\r\n\r\n    pressed: boolean\r\n\r\n    onKeyDownListeners: ({ id: string, name: string, callback: ()=> void})[]\r\n    onAnyKeyDownListeners: ({ id: string, callback: (name: string)=> void })[]\r\n    \r\n    constructor() {\r\n        this.eventKeys = {\r\n            \"right\": [\"ArrowRight\", \"KeyD\"],\r\n            \"left\": [\"ArrowLeft\", \"KeyA\"],\r\n            \"up\": [\"ArrowUp\", \"KeyW\"],\r\n            \"down\": [\"ArrowDown\", \"KeyS\"],\r\n            \"enter\": [\"Enter\"],\r\n        };\r\n\r\n        this.keys = {\r\n            right: false,\r\n            left: false,\r\n            up: false,\r\n            down: false,\r\n            enter: false,\r\n        }\r\n\r\n        this.pressed = false;\r\n    \r\n        this.onKeyDownListeners = [];\r\n        this.onAnyKeyDownListeners = [];\r\n        \r\n        window.addEventListener(\"keydown\", e=> {\r\n            this.updateKey(e.code, true)\r\n\r\n            if (this.pressed) return;\r\n            this.onKeyDownListeners.map(listener=> {\r\n                this.eventKeys[listener.name].map(key=> {\r\n                    \r\n                    if (e.code == key) {\r\n                        listener.callback();\r\n                        this.pressed = true;\r\n                    }\r\n                    \r\n                });\r\n            });\r\n            this.onAnyKeyDownListeners.map(listener=> {\r\n                Object.keys(this.eventKeys).map(ekey=> {\r\n                \r\n                    this.eventKeys[ekey].map(key=> {\r\n    \r\n                        if (key == e.code) {\r\n                            listener.callback(ekey);\r\n                            this.pressed = true;\r\n                        }\r\n    \r\n                    })\r\n                    \r\n                });\r\n            });\r\n            \r\n        });\r\n        window.addEventListener(\"keyup\", e=> {\r\n            this.updateKey(e.code, false);\r\n            this.pressed = false;\r\n        });\r\n    }\r\n\r\n    onKeyDown(id: string, name: string, callback: ()=> void) {\r\n\r\n        this.onKeyDownListeners.push({\r\n            id, name, callback\r\n        });\r\n        \r\n    }\r\n    onAnyKeyDown(id: string, callback: (name: string)=> void) {\r\n        \r\n        this.onAnyKeyDownListeners.push({\r\n            id, callback\r\n        });\r\n\r\n    }\r\n\r\n    removeListenerById(id: string) {\r\n        this.onKeyDownListeners = this.onKeyDownListeners.filter(l=> l.id != id);\r\n        this.onAnyKeyDownListeners = this.onAnyKeyDownListeners.filter(l=> l.id != id);\r\n    }\r\n\r\n    updateKey(code: string, enabled: boolean) {\r\n        this.mapKeys((ekey, key)=> {\r\n            if (code == key)\r\n                this.keys[ekey as keyof typeof this.keys] = enabled;\r\n        });\r\n    }\r\n    mapKeys(func: (ekey: string, key: string)=> void) {\r\n        Object.keys(this.eventKeys).map(ekey=> {\r\n            this.eventKeys[ekey].map(key=> func(ekey, key))\r\n        })\r\n    }\r\n}","import { Color, Config, GeneratorConfig } from \"../config\";\r\nimport { Particle } from \"./components/Particles\";\r\nimport { Game } from \"./Game\";\r\nimport { safeValue, Vector2 } from \"./utils/math\";\r\n\r\ntype RendererLayer = {\r\n    canvas: HTMLCanvasElement\r\n    context: CanvasRenderingContext2D\r\n    update: boolean\r\n    cameraFactor: number\r\n}\r\nexport type StrokeSettings = { width: number, color: string }\r\nexport type DrawRectProps = {\r\n    color?: string\r\n    width?: number\r\n    height?: number\r\n    position?: Vector2\r\n    rotation?: number\r\n    opacity?: number\r\n    stroke?: StrokeSettings\r\n    layer?: string\r\n};\r\nexport type DrawLineProps = {\r\n    color?: string\r\n    width: number\r\n    points: [Vector2, Vector2]\r\n    opacity?: number\r\n    layer?: string\r\n};\r\nexport type DrawTextProps = {\r\n    text?: string\r\n    color?: string\r\n    font?: string\r\n    centered?: boolean\r\n    position?: Vector2\r\n    rotation?: number\r\n    scale?: Vector2\r\n    opacity?: number\r\n    layer?: string\r\n};\r\n\r\nexport class Renderer {\r\n    game: Game\r\n    particles: Particle[]\r\n    layers:{ [name: string]: RendererLayer }\r\n    \r\n    constructor(game: Game) {\r\n        this.game = game;\r\n\r\n        this.particles = [];\r\n\r\n        this.layers = {\r\n            \"bg\": this.createLayer(\"bg\"),\r\n            \"game\": this.createLayer(\"game\"),\r\n            \"particles\": this.createLayer(\"particles\"),\r\n            \"ui\": this.createLayer(\"ui\", true, 0),\r\n            \"debug\": this.createLayer(\"debug\", false),\r\n        };\r\n        console.log(this.layers);\r\n        \r\n        document.body.style.background = Color.STONE_LAYER_COLOR;\r\n    }\r\n    \r\n    // Create new layer\r\n    createLayer(name: string, update?: boolean, cameraFactor?: number): RendererLayer {\r\n        const canvas = document.createElement(\"canvas\");\r\n\r\n        canvas.setAttribute(\"id\", name);\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        document.body.appendChild(canvas);\r\n\r\n        const context = canvas.getContext(\"2d\")!;\r\n        context.imageSmoothingEnabled = false;\r\n\r\n        return { canvas, context, update: safeValue(update, true), cameraFactor: safeValue(cameraFactor, 1) };\r\n    }\r\n\r\n    render() {\r\n        // > Clear layers\r\n        Object.keys(this.layers).map(key=> {\r\n            if (this.layers[key].update)\r\n                this.layers[key].context.clearRect(0, 0, window.innerWidth, window.innerHeight)\r\n        });\r\n\r\n        this.changeBGColor();\r\n    }\r\n    // > Change bg color\r\n    changeBGColor() {\r\n        const spriteSize = Config.SPRITE_SIZE;\r\n        const layerBlendHeight = GeneratorConfig.LAYERS_BLEND_HEIGHT;\r\n        \r\n        // Basalt layer color\r\n        if (this.game.camera.position.y > (GeneratorConfig.BASALT_LAYER_HEIGHT - layerBlendHeight) * spriteSize)\r\n            document.body.style.background = Color.BASALT_LAYER_COLOR;\r\n        // Burnt basalt layer color\r\n        if (this.game.camera.position.y > (GeneratorConfig.BURNT_BASALT_LAYER_HEIGHT - layerBlendHeight) * spriteSize)\r\n            document.body.style.background = Color.BURNT_BASALT_LAYER_COLOR;\r\n        // Stone layer color\r\n        else if (this.game.camera.position.y < (GeneratorConfig.BASALT_LAYER_HEIGHT - layerBlendHeight) * spriteSize)\r\n            document.body.style.background = Color.STONE_LAYER_COLOR;\r\n    }\r\n    // > Render particles\r\n    renderParticles(game: Game) {\r\n        this.particles.map(part=> {\r\n            \r\n            part.update(this.game);\r\n\r\n            part.render(this, part);\r\n        });\r\n        this.particles.map((part, index)=> {\r\n\r\n            if (part.size <= 0 || part.opacity <= 0) \r\n                this.particles.splice(index, 1);\r\n        });\r\n    }\r\n    inCameraViewport(pos: Vector2, width?: number, height?: number, repeat?: number): boolean {\r\n        const cam = this.game.camera.position;\r\n        const \r\n            w = innerWidth + 150,\r\n            h = innerHeight + 150;\r\n        width = safeValue(width, Config.SPRITE_SIZE);\r\n        height = safeValue(height, Config.SPRITE_SIZE);\r\n        return (\r\n            pos.x + width / 2 + (repeat ? repeat * width : 1) > cam.x - w / 2 &&\r\n            pos.y + height / 2 > cam.y - h / 2 &&\r\n            pos.x - width / 2 < cam.x + w / 2 &&\r\n            pos.y - height / 2 < cam.y + h / 2\r\n        );\r\n    }\r\n    getCameraPosition(layer?: string): Vector2 {\r\n        const factor = this.layers[layer || \"game\"];\r\n        \r\n        return this.game.camera.position.add(this.game.camera.offset).mul(factor.cameraFactor);\r\n    }\r\n\r\n    // Get layer context\r\n    getContext(layer?: string): Renderer[\"layers\"][0][\"context\"] {\r\n        return this.layers[layer || \"game\"].context;\r\n    }\r\n    startTransform(layer?: string, pos?: Vector2, rotation?: number, scale?: Vector2, opacity?: number) {\r\n        const l = this.layers[layer || \"game\"];\r\n\r\n        const p = pos || Vector2.zero();\r\n        \r\n        l.context.save();\r\n        l.context.transform(\r\n            scale?.x || 1, 0, 0, scale?.y || 1,\r\n            p.x - this.getCameraPosition(layer).x + window.innerWidth / 2 * l.cameraFactor,\r\n            p.y - this.getCameraPosition(layer).y + window.innerHeight / 2 * l.cameraFactor\r\n        );\r\n        l.context.rotate(rotation || 0);\r\n\r\n        const op = safeValue(opacity, 1);\r\n        l.context.globalAlpha = op > 0 ? op : 0;\r\n    }\r\n    endTransform(layer?: string) {\r\n        this.layers[layer || \"game\"].context.restore();\r\n    }\r\n    \r\n    // Draw primitives\r\n    drawRect(props: DrawRectProps) {\r\n        const w = safeValue(props.width, 1) * Config.SPRITE_SIZE;\r\n        const h = safeValue(props.height, 1) * Config.SPRITE_SIZE;\r\n\r\n        if (!this.inCameraViewport(safeValue(props.position, Vector2.zero()), w, h) && this.layers[props.layer || \"game\"].cameraFactor == 1) return;\r\n\r\n        this.startTransform(props.layer, props.position, props.rotation, Vector2.all(), props.opacity);\r\n\r\n        const context = this.getContext(props.layer);\r\n\r\n        context.fillStyle = props.color || \"#fff\";\r\n        context.fillRect(-w / 2, -h / 2, w, h);\r\n        if (props.stroke) {\r\n            context.lineWidth = props.stroke.width;\r\n            context.strokeStyle = props.stroke.color;\r\n            context.strokeRect(-w / 2, -h / 2, w, h);\r\n        }\r\n\r\n        this.endTransform(props.layer);\r\n    }\r\n    drawLine(props: DrawLineProps) { \r\n        const context = this.getContext(props.layer);\r\n        context.save();\r\n\r\n        context.globalAlpha = safeValue(props.opacity, 1);\r\n        \r\n        context.lineWidth = props.width;\r\n        context.strokeStyle = props.color || \"#fff\";\r\n\r\n        const w = window.innerWidth / 2;\r\n        const h = window.innerHeight / 2;\r\n        \r\n        context.moveTo(props.points[0].x - this.getCameraPosition(props.layer).x + w, props.points[0].y - this.getCameraPosition(props.layer).y + h);\r\n        context.lineTo(props.points[1].x - this.getCameraPosition(props.layer).x + w, props.points[1].y - this.getCameraPosition(props.layer).y + h);\r\n        \r\n        context.stroke();\r\n        context.beginPath();\r\n        context.restore();\r\n    }\r\n    drawText(props: DrawTextProps) { \r\n        const context = this.getContext(props.layer);\r\n        \r\n        this.startTransform(props.layer, props.position, props.rotation, props.scale, props.opacity);\r\n\r\n        function renderText(text: string, pos: Vector2) {\r\n            context.strokeText(text, pos.x, pos.y);\r\n            context.fillText(text, pos.x, pos.y);\r\n        }\r\n        \r\n        context.strokeStyle = Color.STONE_LAYER_COLOR;\r\n        context.lineWidth = 8;\r\n        context.miterLimit = 8;\r\n        context.lineJoin = \"round\";\r\n        \r\n        context.fillStyle = props.color || \"#fff\";\r\n        context.font = props.font || \"18px Pixel\";\r\n        if (safeValue(props.centered, true))\r\n            context.textAlign = \"center\";\r\n        context.textBaseline = \"middle\"\r\n\r\n        const text = props.text || \"\";\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            for (let i = 0; i < text.split(\"\\n\").length; i ++)\r\n                renderText(text.split(\"\\n\")[i], new Vector2(0, i * (parseInt(context.font.split(\" \")[0]))));\r\n        } else\r\n            renderText(text, Vector2.zero());\r\n\r\n        // context.s();\r\n        \r\n        this.endTransform(props.layer);\r\n    }\r\n    \r\n    drawSprite(props: {\r\n        texture: HTMLImageElement | undefined,\r\n        width?: number, height?: number,\r\n        position?: Vector2, rotation?: number, offset?: Vector2,\r\n        layer?: string,\r\n        scale?: Vector2, flip?: { x: boolean, y: boolean }, opacity?: number, repeat?: number\r\n    }) {\r\n        if (!props.texture) return;\r\n\r\n        const w = safeValue(props.width, 1) * Config.SPRITE_SIZE;\r\n        const h = safeValue(props.height, 1) * Config.SPRITE_SIZE;\r\n        \r\n        const p = safeValue(props.position, Vector2.zero());\r\n        const o = safeValue(props.offset, Vector2.zero());\r\n        \r\n        if ((!this.inCameraViewport(p, w, h, props.repeat)) && this.layers[props.layer || \"game\"].cameraFactor == 1) return;\r\n        \r\n        const f = safeValue(props.flip, { x: false, y: false });\r\n        const s = safeValue(props.scale, Vector2.all());\r\n        const context = this.getContext(props.layer);\r\n        \r\n        this.startTransform(\r\n            props.layer,\r\n            p.add(o),\r\n            props.rotation,\r\n            new Vector2(s.x * (f.x ? -1 : 1), s.y * (f.y ? -1 : 1)),\r\n            props.opacity\r\n        );\r\n        \r\n        // Draw sprite without repeat\r\n        if (!props.repeat)\r\n            context.drawImage(props.texture, -w / 2, -h / 2, w, h);\r\n        else\r\n            // And... With repeat?\r\n            for (let i = 0; i < props.repeat; i ++)\r\n                context.drawImage(props.texture, -w / 2 + i * w, -h / 2, w, h);\r\n\r\n        this.endTransform(props.layer);\r\n    }\r\n\r\n    updateAspect() {\r\n        Object.keys(this.layers).map(key=> {\r\n\r\n            this.layers[key].canvas.width = window.innerWidth;\r\n            this.layers[key].canvas.height = window.innerHeight;\r\n            this.layers[key].context.imageSmoothingEnabled = false;\r\n\r\n        })\r\n    }\r\n}","/*\r\n * >> Adaptive to typescript by Bogdanov :D\r\n * >> https://github.com/CloudBogdan\r\n *\r\n * A speed-improved perlin and simplex noise algorithms for 2D.\r\n *\r\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\n * Better rank ordering method by Stefan Gustavson in 2012.\r\n * Converted to Javascript by Joseph Gentle.\r\n *\r\n * Version 2012-03-09\r\n *\r\n * This code was placed in the public domain by its original author,\r\n * Stefan Gustavson. You may use it as you see fit, but\r\n * attribution is appreciated.\r\n *\r\n */\r\nclass Grad {\r\n    x: number\r\n    y: number\r\n    z: number\r\n    \r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x; this.y = y; this.z = z;\r\n    }\r\n\r\n    dot2(x: number, y: number) {\r\n        return this.x * x + this.y * y;\r\n    }\r\n    dot3(x: number, y: number, z: number) {\r\n        return this.x * x + this.y * y + this.z * z;\r\n    }\r\n}\r\n// function Grad(x: number, y: number, z: number) {\r\n//     this.x = x; this.y = y; this.z = z;\r\n// }\r\n\r\n// Grad.prototype.dot2 = function (x: number, y: number) {\r\n//     return this.x * x + this.y * y;\r\n// };\r\n\r\n// Grad.prototype.dot3 = function (x: number, y: number, z: number) {\r\n//     return this.x * x + this.y * y + this.z * z;\r\n// };\r\n\r\nvar grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0),\r\nnew Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1),\r\nnew Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\r\n\r\nvar p = [151, 160, 137, 91, 90, 15,\r\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n// To remove the need for index wrapping, double the permutation table length\r\nvar perm = new Array(512);\r\nvar gradP = new Array(512);\r\n\r\n// This isn't a very good seeding function, but it works ok. It supports 2^16\r\n// different seed values. Write something better if you need more seeds.\r\nexport function seed(seed: number) {\r\n    if (seed > 0 && seed < 1) {\r\n        // Scale the seed out\r\n        seed *= 65536;\r\n    }\r\n\r\n    seed = Math.floor(seed);\r\n    if (seed < 256) {\r\n        seed |= seed << 8;\r\n    }\r\n\r\n    for (var i = 0; i < 256; i++) {\r\n        var v: number;\r\n        if (i & 1) {\r\n            v = p[i] ^ (seed & 255);\r\n        } else {\r\n            v = p[i] ^ ((seed >> 8) & 255);\r\n        }\r\n\r\n        perm[i] = perm[i + 256] = v;\r\n        gradP[i] = gradP[i + 256] = grad3[v % 12];\r\n    }\r\n};\r\n\r\nseed(0);\r\n\r\n/*\r\nfor(var i=0; i<256; i++) {\r\n  perm[i] = perm[i + 256] = p[i];\r\n  gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\r\n}*/\r\n\r\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\r\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\r\nvar G2 = (3 - Math.sqrt(3)) / 6;\r\n\r\nvar F3 = 1 / 3;\r\nvar G3 = 1 / 6;\r\n\r\n// 2D simplex noise\r\nexport function simplex2(xin: number, yin: number) {\r\n    var n0: number, n1: number, n2: number; // Noise contributions from the three corners\r\n    // Skew the input space to determine which simplex cell we're in\r\n    var s = (xin + yin) * F2; // Hairy factor for 2D\r\n    var i = Math.floor(xin + s);\r\n    var j = Math.floor(yin + s);\r\n    var t = (i + j) * G2;\r\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n    var y0 = yin - j + t;\r\n    // For the 2D case, the simplex shape is an equilateral triangle.\r\n    // Determine which simplex we are in.\r\n    var i1: number, j1: number; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n    if (x0 > y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n        i1 = 1; j1 = 0;\r\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n        i1 = 0; j1 = 1;\r\n    }\r\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n    // c = (3-sqrt(3))/6\r\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n    var y1 = y0 - j1 + G2;\r\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n    var y2 = y0 - 1 + 2 * G2;\r\n    // Work out the hashed gradient indices of the three simplex corners\r\n    i &= 255;\r\n    j &= 255;\r\n    var gi0 = gradP[i + perm[j]];\r\n    var gi1 = gradP[i + i1 + perm[j + j1]];\r\n    var gi2 = gradP[i + 1 + perm[j + 1]];\r\n    // Calculate the contribution from the three corners\r\n    var t0 = 0.5 - x0 * x0 - y0 * y0;\r\n    if (t0 < 0) {\r\n        n0 = 0;\r\n    } else {\r\n        t0 *= t0;\r\n        n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\r\n    }\r\n    var t1 = 0.5 - x1 * x1 - y1 * y1;\r\n    if (t1 < 0) {\r\n        n1 = 0;\r\n    } else {\r\n        t1 *= t1;\r\n        n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n    }\r\n    var t2 = 0.5 - x2 * x2 - y2 * y2;\r\n    if (t2 < 0) {\r\n        n2 = 0;\r\n    } else {\r\n        t2 *= t2;\r\n        n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 70 * (n0 + n1 + n2);\r\n};\r\n\r\n// 3D simplex noise\r\nexport function simplex3(xin: number, yin: number, zin: number) {\r\n    var n0: number, n1: number, n2: number, n3: number; // Noise contributions from the four corners\r\n\r\n    // Skew the input space to determine which simplex cell we're in\r\n    var s = (xin + yin + zin) * F3; // Hairy factor for 2D\r\n    var i = Math.floor(xin + s);\r\n    var j = Math.floor(yin + s);\r\n    var k = Math.floor(zin + s);\r\n\r\n    var t = (i + j + k) * G3;\r\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n    var y0 = yin - j + t;\r\n    var z0 = zin - k + t;\r\n\r\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n    // Determine which simplex we are in.\r\n    var i1: number, j1: number, k1: number; // Offsets for second corner of simplex in (i,j,k) coords\r\n    var i2: number, j2: number, k2: number; // Offsets for third corner of simplex in (i,j,k) coords\r\n    if (x0 >= y0) {\r\n        if (y0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n        else if (x0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1; }\r\n        else { i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1; }\r\n    } else {\r\n        if (y0 < z0) { i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1; }\r\n        else if (x0 < z0) { i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1; }\r\n        else { i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n    }\r\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n    // c = 1/6.\r\n    var x1 = x0 - i1 + G3; // Offsets for second corner\r\n    var y1 = y0 - j1 + G3;\r\n    var z1 = z0 - k1 + G3;\r\n\r\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\r\n    var y2 = y0 - j2 + 2 * G3;\r\n    var z2 = z0 - k2 + 2 * G3;\r\n\r\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\r\n    var y3 = y0 - 1 + 3 * G3;\r\n    var z3 = z0 - 1 + 3 * G3;\r\n\r\n    // Work out the hashed gradient indices of the four simplex corners\r\n    i &= 255;\r\n    j &= 255;\r\n    k &= 255;\r\n    var gi0 = gradP[i + perm[j + perm[k]]];\r\n    var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\r\n    var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\r\n    var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]];\r\n\r\n    // Calculate the contribution from the four corners\r\n    var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n    if (t0 < 0) {\r\n        n0 = 0;\r\n    } else {\r\n        t0 *= t0;\r\n        n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\r\n    }\r\n    var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n    if (t1 < 0) {\r\n        n1 = 0;\r\n    } else {\r\n        t1 *= t1;\r\n        n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n    }\r\n    var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n    if (t2 < 0) {\r\n        n2 = 0;\r\n    } else {\r\n        t2 *= t2;\r\n        n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n    }\r\n    var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n    if (t3 < 0) {\r\n        n3 = 0;\r\n    } else {\r\n        t3 *= t3;\r\n        n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 32 * (n0 + n1 + n2 + n3);\r\n\r\n};\r\n\r\n// ##### Perlin noise stuff\r\n\r\nfunction fade(t: number) {\r\n    return t * t * t * (t * (t * 6 - 15) + 10);\r\n}\r\n\r\nfunction lerp(a: number, b: number, t: number) {\r\n    return (1 - t) * a + t * b;\r\n}\r\n\r\n// 2D Perlin Noise\r\nexport function perlin2(x: number, y: number) {\r\n    // Find unit grid cell containing point\r\n    var X = Math.floor(x), Y = Math.floor(y);\r\n    // Get relative xy coordinates of point within that cell\r\n    x = x - X; y = y - Y;\r\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n    X = X & 255; Y = Y & 255;\r\n\r\n    // Calculate noise contributions from each of the four corners\r\n    var n00 = gradP[X + perm[Y]].dot2(x, y);\r\n    var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\r\n    var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\r\n    var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\r\n\r\n    // Compute the fade curve value for x\r\n    var u = fade(x);\r\n\r\n    // Interpolate the four results\r\n    return lerp(\r\n        lerp(n00, n10, u),\r\n        lerp(n01, n11, u),\r\n        fade(y));\r\n};\r\n\r\n// 3D Perlin Noise\r\nexport function perlin3(x: number, y: number, z: number) {\r\n    // Find unit grid cell containing point\r\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\r\n    // Get relative xyz coordinates of point within that cell\r\n    x = x - X; y = y - Y; z = z - Z;\r\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n    X = X & 255; Y = Y & 255; Z = Z & 255;\r\n\r\n    // Calculate noise contributions from each of the eight corners\r\n    var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\r\n    var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\r\n    var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\r\n    var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\r\n    var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\r\n    var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\r\n    var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\r\n    var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\r\n\r\n    // Compute the fade curve value for x, y, z\r\n    var u = fade(x);\r\n    var v = fade(y);\r\n    var w = fade(z);\r\n\r\n    // Interpolate\r\n    return lerp(\r\n        lerp(\r\n            lerp(n000, n100, u),\r\n            lerp(n001, n101, u), w),\r\n        lerp(\r\n            lerp(n010, n110, u),\r\n            lerp(n011, n111, u), w),\r\n        v);\r\n};","import { Game } from \"./Game\"\r\nimport { Ore } from \"../objects/ores/Ore\"\r\nimport { Vector2 } from \"./utils/math\"\r\nimport { Point } from \"./components/Point\";\r\nimport { Config } from \"../config\";\r\nimport { perlin2, seed } from \"./utils/noise\";\r\nimport { Destrony } from \"../objects/ores/Destrony\";\r\n\r\nlet __chunkId = 0;\r\n\r\nexport type Chunk = {\r\n    group: string\r\n    pos: Vector2\r\n}\r\ntype GeneratorSettings = {\r\n    value: [number, number]\r\n    height: [number, number]\r\n    ore: typeof Ore | any | null\r\n    divider?: number\r\n}\r\n\r\nexport class Generator {\r\n    game: Game\r\n\r\n    seed: number\r\n    \r\n    chunks: Chunk[]\r\n    destroyedOres: string[]\r\n    settings: GeneratorSettings[]\r\n    range: Vector2[]\r\n    \r\n    constructor(game: Game) {\r\n        this.game = game;\r\n\r\n        // this.seed = Date.now();\r\n        this.seed = 1636721068016;\r\n        console.log(this.seed);\r\n        seed(this.seed);\r\n\r\n        this.chunks = [];\r\n        this.destroyedOres = [];\r\n        this.settings = [];\r\n        this.range = [\r\n            new Vector2(1, 0), new Vector2(-1, 0),\r\n            new Vector2(0, 1), new Vector2(0, -1),\r\n            new Vector2(1, 1), new Vector2(-1, -1),\r\n            new Vector2(-1, 1), new Vector2(1, -1),\r\n            new Vector2(1, -1), new Vector2(-1, 1),\r\n            new Vector2(0, 0)\r\n        ];\r\n\r\n        \r\n    }\r\n\r\n    generateChunksAt(position: Vector2) {\r\n        const pos = position.div(Config.SPRITE_SIZE * Config.CHUNK_SIZE).apply(Math.floor);\r\n        \r\n        if (pos.add(new Vector2(.5, .5)).mul(Config.SPRITE_SIZE * 5).distance(position) > 100) {\r\n\r\n            this.range.map(p=> {\r\n\r\n                if (!this.chunks.find(c=> Vector2.compare(c.pos, pos.add(p)))) {\r\n                    const chunk = this.createChunk(pos.add(p));\r\n                    if (chunk)\r\n                        this.chunks.push(chunk);\r\n                }\r\n                \r\n            });\r\n            \r\n        }\r\n\r\n        this.chunks.map((chunk, index)=> {\r\n\r\n            if (position.distance(chunk.pos.mul(Config.SPRITE_SIZE * Config.CHUNK_SIZE)) > 900) {\r\n                this.game.removeChildrenByGroupName(chunk.group);\r\n                this.chunks.splice(index, 1);\r\n            }\r\n        \r\n        });\r\n        \r\n    }\r\n    \r\n    createChunk(pos: Vector2): Chunk | undefined {\r\n\r\n        // if (pos.x < 0 || pos.x > Config.WORLD_WIDTH / Config.CHUNK_SIZE || pos.y < 0 || pos.y > Config.WORLD_HEIGHT / Config.CHUNK_SIZE)\r\n        if (pos.y < 0 || pos.y > Config.WORLD_HEIGHT / Config.CHUNK_SIZE)\r\n            return;\r\n        \r\n        const ores: (typeof Ore | null)[][] = [[null]];\r\n        __chunkId ++;\r\n    \r\n        for (let y = 0; y < Config.CHUNK_SIZE; y ++) {\r\n            ores.push([]);\r\n            for (let x = 0; x < Config.CHUNK_SIZE; x ++) {\r\n                ores[y].push(null);\r\n                const _y = y + pos.y * Config.CHUNK_SIZE;\r\n                const _x = x + pos.x * Config.CHUNK_SIZE;\r\n                \r\n                for (let i = 0; i < this.settings.length; i ++) {\r\n                    const gen = this.settings[i];\r\n    \r\n                    const div = gen.divider || 10;\r\n                    const value = (+perlin2((x + pos.x * Config.CHUNK_SIZE) / div, (y + pos.y * Config.CHUNK_SIZE) / div) + 1) / 1.5;\r\n    \r\n                    // if (!(_x == Math.floor(Config.WORLD_WIDTH / 2) && (_y == 0 || _y == 1 || _y == 2))) {\r\n                    if (value >= gen.value[0] && value <= gen.value[1] && _y >= gen.height[0] && _y <= gen.height[1])\r\n                        ores[y][x] = gen.ore;\r\n                    // }\r\n                }\r\n                \r\n                const inChunkId = [x, y, pos.x, pos.y].join(\"-\");\r\n                if (ores[y][x] && this.destroyedOres.indexOf(inChunkId) < 0) {\r\n                    const o = new (ores[y][x] as any)(new Vector2(_x, _y));\r\n                    o.inChunkId = inChunkId;\r\n                    o.group = `chunk-${ __chunkId }`;\r\n                    this.game.add(o);\r\n                }\r\n    \r\n                \r\n            }\r\n        }\r\n    \r\n        this.game.initChildren();\r\n    \r\n        return { group: `chunk-${ __chunkId }`, pos };\r\n\r\n    }\r\n\r\n    destroyOre(inChunkId: Point[\"id\"]) {\r\n        this.destroyedOres.push(inChunkId);\r\n    }\r\n}","import { Point } from \"./components/Point\";\r\nimport { Asset, AssetType } from \"./Asset\";\r\nimport { Container } from \"./components/Container\";\r\nimport { Gamepad } from \"./events/Gamepad\";\r\nimport { Physics } from \"./Physics\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { random, Vector2 } from \"./utils/math\";\r\nimport { Generator } from \"./Generator\";\r\n\r\nexport type Clock = {\r\n    elapsed: number\r\n};\r\ntype Camera = {\r\n    position: Vector2\r\n    offset: Vector2\r\n    startShakeElapsed: number\r\n    shaking: boolean\r\n    shakeAmplitude: number\r\n    follow: (pos: Vector2, lerp?: number)=> void\r\n    shake: (amplitude?: number)=> void\r\n}\r\n\r\nexport class Game extends Container {\r\n    gamepad: Gamepad\r\n    camera: Camera\r\n    \r\n    assets: Asset[]\r\n\r\n    clock: Clock\r\n    initListeners: (()=> void)[]\r\n    updateListeners: ((clock: Clock)=> void)[]\r\n    renderListeners: ((renderer: Renderer)=> void)[]\r\n    \r\n    renderer: Renderer\r\n    physics: Physics\r\n    generator: Generator\r\n    \r\n    constructor() {\r\n        super();\r\n\r\n        this.gamepad = new Gamepad();\r\n        this.camera = {\r\n            position: Vector2.zero(),\r\n            offset: Vector2.zero(),\r\n            startShakeElapsed: 0,\r\n            shaking: false,\r\n            shakeAmplitude: 2,\r\n            follow(pos: Vector2, lerp?: number) {\r\n                if (lerp)\r\n                    this.position.lerp(pos, lerp);\r\n                else\r\n                    this.position.copy(pos);\r\n            },\r\n            shake(amplitude?: number) {\r\n                this.shakeAmplitude = amplitude || 2;\r\n                if (!this.shaking) {\r\n                    this.shaking = true;\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.assets = [];\r\n        \r\n        this.clock = {\r\n            elapsed: 0\r\n        };\r\n        this.initListeners = [];\r\n        this.updateListeners = [];\r\n        this.renderListeners = [];\r\n        \r\n        this.renderer = new Renderer(this);\r\n        this.physics = new Physics(this);\r\n        this.generator = new Generator(this);\r\n\r\n    }\r\n\r\n    loadAsset(name: string, src: Asset[\"src\"], type?: AssetType) {\r\n        this.assets.push(new Asset(name, src, type));\r\n    }\r\n    getAssetByName(name: string): Asset | null | undefined {\r\n        return this.assets.find(asset=> asset.name == name);\r\n    }\r\n    \r\n    removeChildById(id: Point[\"id\"], listenerId?: string) {\r\n        super.removeChildById(id);\r\n        this.gamepad.removeListenerById(listenerId || id);\r\n    }\r\n\r\n    initChildren() {\r\n        super.initChildren(this);\r\n    }\r\n    \r\n    addInit(listener: Game[\"initListeners\"][0]) {\r\n        this.initListeners.push(listener);\r\n    }\r\n    addUpdate(listener: Game[\"updateListeners\"][0]) {\r\n        this.updateListeners.push(listener);\r\n    }\r\n    addRender(listener: Game[\"renderListeners\"][0]) {\r\n        this.renderListeners.push(listener);\r\n    }\r\n\r\n    init() {\r\n\r\n        // Init\r\n        this.initListeners.map(listener=> listener());\r\n        this.initChildren();\r\n        \r\n        const loop = ()=> {\r\n            requestAnimationFrame(loop);\r\n            this.renderer.render();\r\n            this.clock.elapsed ++;\r\n            if (!this.camera.shaking) {\r\n                this.camera.startShakeElapsed = this.clock.elapsed;\r\n                this.camera.offset.lerp(Vector2.zero(), .2);\r\n            } else {\r\n                if ((this.clock.elapsed - this.camera.startShakeElapsed) % 20 == 0)\r\n                    this.camera.shaking = false;\r\n                this.camera.offset.copy(this.camera.offset.add(new Vector2(random(-this.camera.shakeAmplitude, this.camera.shakeAmplitude), random(-this.camera.shakeAmplitude, this.camera.shakeAmplitude))));\r\n            }\r\n            \r\n            // Update\r\n            this.physics.update();\r\n            this.callChildren(\"update\", this);\r\n            this.updateListeners.map(listener=> listener(this.clock));\r\n            \r\n            this.callChildren(\"render\", this, this.renderer);\r\n            this.renderListeners.map(listener=> listener(this.renderer));\r\n\r\n            this.renderer.renderParticles(this);\r\n            \r\n        }\r\n        loop();\r\n\r\n        // Canvas update\r\n        window.addEventListener(\"resize\", ()=> {\r\n            this.renderer.updateAspect();\r\n        });\r\n        \r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Renderer } from \"../Renderer\";\r\nimport { Point, IPointProps } from \"./Point\";\r\n\r\nexport type ITextProps = {\r\n    font?: string\r\n    color?: string\r\n} & IPointProps;\r\n\r\nexport class Text extends Point {\r\n    font: string\r\n    color: string\r\n    text: string\r\n    \r\n    constructor(name: string, text: string, props?: ITextProps) {\r\n        super(name, props);\r\n\r\n        this.text = text;\r\n        this.font = props?.font || \"18px Pixel\";\r\n        this.color = props?.color || \"#fff\";\r\n    }\r\n\r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n\r\n        game.renderer.drawText({ ...this });\r\n    }\r\n}","import { Game } from \"..\";\r\nimport { ComponentType } from \"../../types\";\r\nimport { standardName, Vector2 } from \"../utils/math\";\r\nimport { Container } from \"./Container\";\r\n\r\nlet __id = 0;\r\n\r\nexport class Group extends Container {\r\n    id: string\r\n    type: ComponentType\r\n    name: string\r\n    \r\n    position: Vector2\r\n    visible: boolean\r\n    allowUpdateChildren: boolean\r\n    \r\n    constructor(name: string, position?: Vector2) {\r\n        super();\r\n        this.id = `${ name }-${ __id ++ }`;\r\n        this.type = \"group\";\r\n        this.name = standardName(name);\r\n\r\n        this.position = position || Vector2.zero();\r\n        this.visible = true;\r\n        this.allowUpdateChildren = true;\r\n    }\r\n\r\n    init(game: Game) {\r\n        this.initChildren(game);\r\n    }\r\n    update(game: Game) {\r\n        if (this.allowUpdateChildren)\r\n            this.callChildren(\"update\", game);\r\n    }\r\n    render(game: Game) {\r\n        if (this.visible)\r\n            this.callChildren(\"render\", game);\r\n    }\r\n}","export * from \"./Game\";\r\n\r\nexport * from \"./components/Point\";\r\nexport * from \"./components/Sprite\";\r\nexport * from \"./components/Text\";\r\nexport * from \"./components/Group\";","import { Game } from \"../Game\";\r\nimport { random, Vector2 } from \"../utils/math\";\r\nimport { Color, Config } from \"../../config\";\r\nimport { Point } from \"./Point\";\r\nimport { Renderer } from \"../Renderer\";\r\n\r\ntype ParticlesSettings = {\r\n    colors?: any[]\r\n    downSize?: number\r\n    downOpacity?: number\r\n    size?: [number, number]\r\n\r\n    gravity?: number\r\n    box?: ()=> Vector2\r\n\r\n    velocity?: ()=> Vector2\r\n    rotationVelocity?: ()=> number\r\n\r\n    render?: (renderer: Renderer, part: Particle)=> void\r\n}\r\n\r\nexport class Particle {\r\n    position: Vector2\r\n    rotation: number\r\n\r\n    velocity: Vector2\r\n    rotationVelocity: number\r\n\r\n    color: string\r\n    opacity: number\r\n    gravity: number\r\n    size: number\r\n    downSize: number\r\n    downOpacity: number\r\n    \r\n    render: (renderer: Renderer, part: Particle)=> void\r\n    \r\n    constructor(position: Vector2, settings?: ParticlesSettings) {\r\n        const c = settings?.colors;\r\n        this.color = c ? c[Math.floor(random(0, c.length))] : Color.BLACK;\r\n        this.opacity = 1;\r\n        this.downOpacity = settings?.downOpacity || 0;\r\n        \r\n        this.position = new Vector2(position.x, position.y);\r\n        this.rotation = 0;\r\n\r\n        const v = settings?.velocity;\r\n        const rv = settings?.rotationVelocity;\r\n        this.velocity = v ? v() : new Vector2(random(-5, 5), random(-10, 5));\r\n        this.rotationVelocity = rv ? rv() : random(-.1, .1)\r\n\r\n        const s = settings?.size;\r\n        this.size = (s ? s : [.5, 1.2])[Math.floor(random(0, 2))];\r\n        this.gravity = settings?.gravity === undefined ? Config.PARTICLES_GRAVITY : settings?.gravity;\r\n        this.downSize = settings?.downSize || .01;\r\n\r\n        this.render = settings?.render ? settings?.render : (renderer, part)=> {\r\n            renderer.drawRect({\r\n                color: this.color,\r\n                width: this.size * .2,\r\n                height: this.size * .2,\r\n                position: this.position, rotation: this.rotation,\r\n                layer: \"particles\"\r\n            });\r\n        }\r\n    }\r\n\r\n    update(game: Game) {\r\n        this.velocity.y += this.gravity;\r\n\r\n        this.rotation += this.rotationVelocity;\r\n        this.size -= this.downSize;\r\n        this.opacity -= this.downOpacity;\r\n        \r\n        this.velocity.x *= .99;\r\n        this.velocity.y *= .99;\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n    }\r\n}\r\n\r\nexport function SpawnParticles(game: Game, position: Vector2, settings?: ParticlesSettings & { count?: number }) {\r\n\r\n    const box = settings?.box;\r\n    \r\n    for (let i = settings?.count || 10; i --;)\r\n        game.renderer.particles.push(new Particle(position.expand().add(box ? box() : Vector2.zero()), settings));\r\n\r\n}","import { Config } from \"../../config\";\r\nimport { Game, ISpriteProps, Sprite } from \"../../engine\"\r\nimport { SpawnParticles } from \"../../engine/components/Particles\";\r\nimport { random, safeValue, Vector2 } from \"../../engine/utils/math\"\r\nimport { Direction } from \"../../types\";\r\nimport { Ore } from \"../ores/Ore\";\r\nimport { ToolLevel } from \"./Player\";\r\n\r\nexport type IEntityProps = {\r\n    hp?: number\r\n    moveSpeed?: number\r\n} & ISpriteProps;\r\n\r\nexport class Entity extends Sprite {\r\n    hp: number\r\n    moveSpeed: number\r\n\r\n    movement: Vector2\r\n    allowMove: boolean\r\n    allowAnimate: boolean\r\n\r\n    digOffsetFactor: number\r\n    \r\n    constructor(name: string, assetName: string, props?: IEntityProps) {\r\n        super(name, assetName, props);\r\n        \r\n        this.hp = props?.hp || 10;\r\n        this.moveSpeed = props?.moveSpeed || 5;\r\n        \r\n        this.movement = new Vector2();\r\n        this.allowMove = true;\r\n        this.allowAnimate = true;\r\n\r\n        this.digOffsetFactor = .2;\r\n    }\r\n\r\n    init(game: Game) {\r\n        super.init(game);\r\n\r\n        this.collider.type = \"dynamic\";\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        if (!this.allowMove) {\r\n            this.movement.set();\r\n            this.velocity.set();\r\n        }\r\n\r\n        this.offset.lerp(Vector2.zero(), this.digOffsetFactor);\r\n        this.animate(game);\r\n    }\r\n    dig(game: Game, damage: number, speed: number, level: ToolLevel, direction: Direction): boolean {\r\n\r\n        let successOreHit = false;\r\n        \r\n        if (this.collider.collidesWith != null && this.collider.collidesWith.any) {\r\n            const ore = game.getChildById<Ore>(this.collider.collidesWith.id, true);\r\n            // const tool = tools[this.toolLevel.toString()];\r\n\r\n            if (ore == undefined) return false;\r\n\r\n            if (this.collider.collidesWith[direction] && this.position.distance(ore.position) < Config.SPRITE_SIZE * 2 && game.clock.elapsed % speed == 0) {\r\n                ore.hit(game, damage, level);\r\n\r\n                successOreHit = level >= ore.needToolLevel;\r\n\r\n                if (direction == \"right\")\r\n                    this.offset = new Vector2(10, 0);\r\n                else if (direction == \"left\")\r\n                    this.offset = new Vector2(-10, 0);\r\n                else if (direction == \"top\")\r\n                    this.offset = new Vector2(0, -10);\r\n                else if (direction == \"bottom\")\r\n                    this.offset = new Vector2(0, 10);\r\n            }\r\n\r\n        }\r\n        this.collider.collidesWith = null;\r\n\r\n        return successOreHit;\r\n\r\n    }\r\n\r\n    move() {\r\n        if (this.movement.x != 0)\r\n            this.flip.x = this.movement.x < 0;\r\n        \r\n        this.velocity.x = this.movement.normalize().x * this.moveSpeed;\r\n        this.velocity.y = this.movement.normalize().y * this.moveSpeed;\r\n    }\r\n    animate(game: Game) {\r\n        if (!this.allowAnimate) return;\r\n        \r\n        if (this.velocity.x != 0 || this.velocity.y != 0)\r\n            this.playAnimation(game, this.name + \"-walk\");\r\n        else\r\n            this.playAnimation(game, this.name + \"-stay\");\r\n    }\r\n\r\n    spawnText(game: Game, text: string, offset?: Vector2) {\r\n        SpawnParticles(game, this.position.add(safeValue(offset, new Vector2(0, -30))), {\r\n            // custom: new Text(\"store-text\", text, { font: \"22px Pixel\" }),\r\n            render(renderer, part) {\r\n                renderer.drawText({\r\n                    text,\r\n                    font: \"22px Pixel\",\r\n                    position: part.position,\r\n                    opacity: part.size, \r\n                    layer: \"particles\"\r\n                });\r\n            },\r\n            size: [5, 5],\r\n            count: 1,\r\n            gravity: 0,\r\n            velocity: ()=> new Vector2(0, -1.5),\r\n            downSize: .08,\r\n            box: ()=> new Vector2(random(-10, 10), random(-10, 10))\r\n        });\r\n    }\r\n}","import { Color, Config } from \"../../config\";\r\nimport { Game } from \"../Game\";\r\nimport { Renderer, StrokeSettings } from \"../Renderer\";\r\nimport { asImage, assetIsValid, lerp, random, safeValue, Vector2, wrapText } from \"../utils/math\";\r\nimport { SpawnParticles } from \"./Particles\";\r\n\r\nexport class Button {\r\n    width: number\r\n    height: number\r\n    \r\n    position: Vector2\r\n    assetName: string\r\n    layer: string\r\n\r\n    animatedPosY: number\r\n    allowScale: boolean\r\n    \r\n    constructor(width?: number, height?: number, layer?: string, assetName?: string, allowScale?: boolean) {\r\n        this.width = safeValue(width, 1);\r\n        this.height = safeValue(height, 1);\r\n        \r\n        this.position = Vector2.zero(); \r\n        this.assetName = assetName || \"interact\";\r\n        this.layer = layer || \"game\";\r\n\r\n        this.animatedPosY = 0;\r\n        this.allowScale = safeValue(allowScale, true);\r\n    }\r\n    \r\n    render(game: Game) {\r\n        this.animatedPosY = lerp(this.animatedPosY, 0, .2);\r\n        \r\n        game.renderer.drawSprite({\r\n            texture: asImage(game.getAssetByName(this.assetName)),\r\n            width: this.width,\r\n            height: this.height,\r\n            position: this.position.add(new Vector2(0, this.animatedPosY)),\r\n            scale: Vector2.all(this.allowScale ? .7 : 1),\r\n            layer: this.layer\r\n        });\r\n    }\r\n    \r\n    click() {\r\n        this.animatedPosY = 10;\r\n    }\r\n}\r\n\r\nexport class UI {\r\n    game: Game | null\r\n    enabled: boolean\r\n    \r\n    allowSelectSlots: boolean\r\n    focused: {\r\n        row: number\r\n        slot: number\r\n    }\r\n    template: number[]\r\n    // slotFocused: number\r\n    // slotsCount: number\r\n    // slotsRawFocused: number\r\n    // slotsRawsCount: number\r\n    \r\n    constructor() {\r\n        this.game = null;\r\n        this.enabled = true;\r\n\r\n        this.allowSelectSlots = true;\r\n        this.focused = { row: 0, slot: 0 };\r\n        this.template = [1];\r\n        // this.slotFocused = 0;\r\n        // this.slotsCount = 1;\r\n        // this.slotsRawFocused = 0;\r\n        // this.slotsRawsCount = 1;\r\n    }\r\n\r\n    init(game: Game) {\r\n        this.game = game;\r\n\r\n        game.gamepad.onAnyKeyDown(\"ui-listener\", name=> {\r\n            if (this.allowSelectSlots && this.enabled)\r\n\r\n            switch (name) {\r\n                case \"right\":\r\n                    this.focused.slot ++;\r\n                    this.bounds();\r\n                    break;\r\n                case \"left\":\r\n                    this.focused.slot --;\r\n                    this.bounds();\r\n                    break;\r\n                case \"up\":\r\n                    this.focused.row --;\r\n                    this.bounds();\r\n                    break;\r\n                case \"down\":\r\n                    this.focused.row ++;\r\n                    this.bounds();\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n        \r\n    }\r\n    bounds() {\r\n        if (this.focused.row < 0)\r\n            this.focused.row = this.template.length-1;\r\n        else if (this.focused.row > this.template.length-1)\r\n            this.focused.row = 0;\r\n        \r\n        if (this.focused.slot > this.template[this.focused.row]-1)\r\n            this.focused.slot = 0;\r\n        else if (this.focused.slot < 0)\r\n            this.focused.slot = this.template[this.focused.row]-1;\r\n    }\r\n    render() {\r\n        if (!this.game || !this.enabled) return;\r\n        \r\n    }\r\n    updateTemplate(template: UI[\"template\"]) {\r\n        this.template = template.filter(t=> t > 0)\r\n    }\r\n\r\n    renderSlot(pos: Vector2, row: number, slot: number, render: ()=> void, width?: number, height?: number, ghost?: boolean) {\r\n        if (!this.game || !this.enabled) return;\r\n\r\n        const focused = this.focused.row == row && this.focused.slot == slot;\r\n\r\n        render();\r\n        \r\n        if (focused || ghost) {\r\n            this.game.renderer.drawRect({\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n                width: safeValue(width, 1),\r\n                height: safeValue(height, 1),\r\n                position: pos.apply(Math.floor),\r\n                stroke: { width: 4, color: Color.ORANGE },\r\n                opacity: (ghost && !focused) ? .2 : 1,\r\n                layer: \"ui\"\r\n            });\r\n        }\r\n\r\n    }\r\n    renderDescriptionUI(props: {\r\n        title: string,\r\n        titleColor?: string,\r\n        specials: string[],\r\n        description: string,\r\n        renderIcon: (pos: Vector2)=> void\r\n    }, game: Game, renderer: Renderer) {\r\n\r\n        const size = Config.SPRITE_SIZE;\r\n        const windowCenter = new Vector2(innerWidth / 2, innerHeight / 2).apply(Math.floor);\r\n        const margin = 6;\r\n        const lineHeight = 22;\r\n\r\n        // Container\r\n        renderer.drawSprite({\r\n            texture: asImage(game.getAssetByName(\"description-ui\")),\r\n            position: new Vector2(0, size * 3).add(windowCenter),\r\n            width: 7,\r\n            height: 5,\r\n            layer: \"ui\"\r\n        });\r\n        \r\n        // Icon\r\n        props.renderIcon(new Vector2(-2.5 * size + size / 2, size + 70).add(windowCenter));\r\n\r\n        // Texts\r\n        const title = wrapText(props.title, 26);\r\n        \r\n        // Title\r\n        renderer.drawText({\r\n            text: title.text,\r\n            font: \"20px Pixel\",\r\n            position: new Vector2(-size * 1.3, size + 70 - size / 2 + 15).add(windowCenter),\r\n            centered: false,\r\n            color: props.titleColor || \"#fff\",\r\n            layer: \"ui\"\r\n        });\r\n        // Specials\r\n        renderer.drawText({\r\n            text: props.specials.join(\"\\n\"),\r\n            color: Color.ORANGE,\r\n            position: new Vector2(-size * 1.3, size + 70 + margin + (title.wrapCount >= 1 ? lineHeight : 0)).add(windowCenter),\r\n            centered: false,\r\n            layer: \"ui\"\r\n        });\r\n        // Description\r\n        renderer.drawText({\r\n            text: wrapText(props.description, 31).text,\r\n            position: new Vector2(-size * 1.3, size + 70 + lineHeight + margin * 2 + lineHeight * title.wrapCount + lineHeight * (props.specials.length - 1)).add(windowCenter),\r\n            centered: false,\r\n            layer: \"ui\"\r\n        });\r\n\r\n    }\r\n\r\n    spawnMessageText(game: Game, text: string) {\r\n        SpawnParticles(game, new Vector2(20, innerHeight - 40), {\r\n            // custom: new Text(\"store-text\", text, { font: \"22px Pixel\" }),\r\n            render(renderer, part) {\r\n                renderer.drawText({\r\n                    text,\r\n                    font: \"22px Pixel\",\r\n                    position: part.position,\r\n                    opacity: part.size, \r\n                    layer: \"ui\",\r\n                    centered: false\r\n                });\r\n            },\r\n            size: [5, 5],\r\n            count: 1,\r\n            gravity: 0,\r\n            rotationVelocity: ()=> random(-.02, .02),\r\n            velocity: ()=> new Vector2(0, -1.5),\r\n            downSize: .08,\r\n        });\r\n    }\r\n}","import { Config, ItemSettings } from \"../../config\"\r\nimport { Game, ISpriteProps, Sprite } from \"../../engine\"\r\nimport { compareNames, random, Vector2 } from \"../../engine/utils/math\"\r\nimport { Player } from \"../entities/Player\"\r\n\r\nexport class Item extends Sprite {\r\n    picked: boolean\r\n    allowPickup: boolean\r\n    liveStartElapsed: number\r\n    nearOnInit: boolean\r\n    \r\n    constructor(name: string, assetName: string, position: Vector2, props?: ISpriteProps) {\r\n        super(name, assetName, {\r\n            ...props,\r\n            colliderType: \"dynamic\",\r\n            position: position.expand()\r\n        });\r\n\r\n        this.allowPickup = true;\r\n        this.picked = false;\r\n        this.liveStartElapsed = 0;\r\n        this.nearOnInit = false;\r\n\r\n        this.collider.width = 6 * Config.SPRITE_SCALE;\r\n        this.collider.height = 6 * Config.SPRITE_SCALE;\r\n    }\r\n\r\n    init(game: Game) {\r\n        super.init(game);\r\n        \r\n        this.liveStartElapsed = game.clock.elapsed;\r\n        this.layer = \"particles\";\r\n        this.velocity.set(random(-8, 8), random(-8, 8));\r\n        this.acceleration.copy(Vector2.all(.8));\r\n\r\n        if (this.checkDistanceToPlayer(game.getChildById(\"player\"), Config.PICKUP_DISTANCE * 2))\r\n            this.nearOnInit = true;\r\n    }\r\n    update(game: Game) {\r\n        super.update(game);\r\n\r\n        if (!game.renderer.inCameraViewport(this.position)) {\r\n            if (game.clock.elapsed - this.liveStartElapsed >= Config.RAW_LIVE_TIME)\r\n                game.removeChildById(this.id);\r\n        } else {\r\n            this.liveStartElapsed = game.clock.elapsed;\r\n        }\r\n        \r\n        if (this.allowPickup) {\r\n            this.followPlayer(game, game.getChildById<Player>(\"player\"));\r\n            this.collideWidthOtherItems([...game.getChildrenByName(\"raw\"), ...game.getChildrenByName(\"item\")]);\r\n        }\r\n    }\r\n\r\n    pickup(game: Game, player: Player, count: number) {\r\n        player.pickup(game, this, this.name, count);\r\n    }\r\n\r\n    followPlayer(game: Game, player: Player | undefined) {\r\n        if (!player) return;\r\n\r\n        if (!this.checkDistanceToPlayer(player))\r\n            this.nearOnInit = false;\r\n\r\n        if (this.nearOnInit) return;\r\n            \r\n        if (!this.picked && this.checkDistanceToPlayer(player)) {\r\n            this.pickup(game, player, 1);\r\n            this.picked = true;\r\n        }\r\n        else if (this.picked && player.wire.distance(this.position) > Config.PICKUP_DISTANCE) {\r\n            this.pickup(game, player, -1);\r\n            this.picked = false;\r\n        }\r\n        \r\n        if (!this.picked) return;\r\n\r\n        this.moveTo(player.wire);\r\n        game.renderer.drawLine({\r\n            color: ItemSettings[this.name] ? ItemSettings[this.name].lineColor : \"#fff\",\r\n            width: 2,\r\n            points: [this.position, player.position],\r\n            layer: \"bg\"\r\n        });\r\n\r\n    }\r\n    checkDistanceToPlayer(player: Player | undefined, distance?: number): boolean | undefined {\r\n        if (player)\r\n            return player.position.distance(this.position) < (distance || Config.PICKUP_DISTANCE);\r\n    }\r\n\r\n    collideWidthOtherItems(items: any[]) {\r\n        if (!this.picked) return;\r\n        \r\n        [...items].filter(item=> item.picked && !compareNames(item.id, this.id)).map((item, index)=> {\r\n        \r\n            if (item.position.distance(this.position) < 8 * Config.SPRITE_SCALE) {\r\n                item.position.copy(item.position.add(item.position.sub(this.position).normalize()));\r\n            }\r\n\r\n        });\r\n    }\r\n    moveTo(position: Vector2) {\r\n        this.velocity.copy(this.velocity.add(position.sub(this.position).mul(.04)));\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class RobotItem extends Item {\r\n    constructor(position: Vector2) {\r\n        super(\"item-robot\", \"robot-stay\", position, {\r\n            scale: new Vector2(.9, .8)\r\n        });\r\n    }\r\n}","import { Config } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { SpawnParticles } from \"../../engine/components/Particles\";\r\nimport { Button } from \"../../engine/components/UI\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { random, Vector2 } from \"../../engine/utils/math\";\r\nimport { Direction } from \"../../types\";\r\nimport { RobotItem } from \"../item/RobotItem\";\r\nimport { Ore } from \"../ores/Ore\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Player } from \"./Player\";\r\n\r\nexport class Robot extends Entity {\r\n    pickupButton: Button\r\n    playerIsNear: boolean\r\n    \r\n    breaked: boolean\r\n\r\n    initElapsed: number\r\n    allowPickup: boolean\r\n    \r\n    constructor(position: Vector2) {\r\n        super(\"robot\", \"robot-stay\", {\r\n            position: position.expand(),\r\n            scale: Vector2.zero()\r\n        });\r\n\r\n        this.pickupButton = new Button();\r\n        this.playerIsNear = false;\r\n        \r\n        this.movement = new Vector2(0, 1);\r\n        this.allowAnimate = false;\r\n        this.acceleration.set(.95, .95);\r\n\r\n        this.breaked = false;\r\n\r\n        this.initElapsed = 0;\r\n        this.allowPickup = false;\r\n\r\n        this.digOffsetFactor = .1;\r\n    }\r\n\r\n    init(game: Game) {\r\n        super.init(game);\r\n\r\n        this.scale.set();\r\n\r\n        this.initElapsed = game.clock.elapsed;\r\n        game.gamepad.onKeyDown(this.id, \"enter\", ()=> {\r\n            if (!this.playerIsNear || !this.allowPickup) return;\r\n\r\n            // Pickup robot\r\n            this.pickupButton.click();\r\n            this.pickup(game);\r\n            console.log(true);\r\n        });\r\n    }\r\n    update(game: Game) {\r\n        super.update(game);\r\n        // if ((game.clock.elapsed - this.initElapsed) % Config.ROBOT_ALLOW_PICKUP_DELAY == 0 && !this.allowPickup)\r\n        if (this.scale.mul(10).apply(Math.round).x >= 10 && !this.allowPickup)\r\n            this.allowPickup = true;\r\n        \r\n        if (!game.renderer.inCameraViewport(this.position)) {\r\n            this.velocity.set();\r\n            return;\r\n        }\r\n\r\n        this.checkPlayerDistance(game);\r\n        \r\n        if (!this.breaked)\r\n            this._move();\r\n\r\n        if (!this.collider.collidesWith) return;\r\n        const ore = game.getChildById<Ore>(this.collider.collidesWith.id);\r\n        if (!ore) return;\r\n        \r\n        // If robot cant destroy ore\r\n        if (ore.needToolLevel > 2 && !this.breaked) {\r\n            this.breaked = true;\r\n        }\r\n        \r\n        this.dig(game, Config.ROBOT_DAMAGE, Config.ROBOT_HIT_SPEED, 2, \"bottom\");\r\n        \r\n    }\r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n\r\n        this.scale.lerp(Vector2.all(), .1);\r\n\r\n        // Pickup button\r\n        if (this.playerIsNear) {\r\n            this.pickupButton.position = new Vector2(0, -90).add(this.position)\r\n            this.pickupButton.render(game);\r\n            game.renderer.drawText({\r\n                text: \"Подобрать\",\r\n                position: new Vector2(0, -50).add(this.position),\r\n            });\r\n        }\r\n        \r\n        // Smoke\r\n        if (this.breaked)\r\n            this.smoke(game);\r\n\r\n    }\r\n\r\n    _move() {\r\n        this.velocity.copy(this.velocity.add(this.movement.mul(.2)));\r\n    }\r\n\r\n    smoke(game: Game) {\r\n\r\n        if (game.clock.elapsed % 20 == 0) {\r\n            SpawnParticles(game, this.position, {\r\n                render: (renderer, part)=> {\r\n\r\n                    renderer.drawRect({\r\n                        color: part.color,\r\n                        position: part.position,\r\n                        rotation: part.rotation,\r\n                        width: part.size / 5,\r\n                        height: part.size / 5,\r\n                        opacity: part.opacity\r\n                    });\r\n\r\n                },\r\n                colors: [\"rgba(50, 50, 50, .8)\"],\r\n                count: 1,\r\n                size: [1, 1.5],\r\n                velocity: ()=> new Vector2(random(-1, 1), random(-1, -3)),\r\n                box: ()=> new Vector2(random(-10, 10), random(-10, 10)),\r\n                rotationVelocity: ()=> random(-1, 1) * .01,\r\n                downSize: -.025,\r\n                downOpacity: .008,\r\n                gravity: .01,\r\n            });\r\n        }\r\n\r\n    }\r\n    checkPlayerDistance(game: Game) {\r\n\r\n        const player = game.getChildById<Player>(\"player\");\r\n        if (!player) return;\r\n        \r\n        this.playerIsNear = player.position.distance(this.position) < Config.ROBOT_PICKUP_DISTANCE\r\n    }\r\n    pickup(game: Game) {\r\n        game.add(new RobotItem(this.position));\r\n        game.initChildren();\r\n        game.removeChildById(this.id);\r\n        this.playerIsNear = false;\r\n    }\r\n}","import { Game } from \"..\";\r\nimport messages from \"../../messages\";\r\nimport { Asset } from \"../Asset\"\r\nimport { asAudio, safeValue } from \"../utils/math\";\r\n\r\nexport class Audio {\r\n    assetName: string | null\r\n    audio: HTMLAudioElement | null | undefined\r\n    \r\n    constructor() {\r\n        this.assetName = null;\r\n        this.audio = null;\r\n    }\r\n\r\n    play(game: Game, assetName: string, toStart?: boolean) {\r\n        this.assetName = assetName;\r\n\r\n        this.audio = asAudio(game.getAssetByName(assetName));\r\n\r\n        if (!this.audio) {\r\n            console.error(messages.err.audioPlayError(assetName));\r\n            return;\r\n        }\r\n        \r\n        if (safeValue(toStart, true))\r\n            this.audio.currentTime = 0;\r\n        this.audio.play();\r\n    }\r\n}","import { Config } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { asAudio, asImage, assetIsValid, compareNames, lerp, random, Vector2 } from \"../../engine/utils/math\";\r\nimport { Direction } from \"../../types\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Ore } from \"../ores/Ore\";\r\nimport { Raw, RawType } from \"../raws/Raw\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { Item } from \"../item/Item\";\r\nimport { Robot } from \"./Robot\";\r\nimport { Audio } from \"../../engine/components/Audio\";\r\n\r\n// > 5 is \"god tool\"\r\nexport type ToolLevel = 1 | 2 | 3 | 4 | 5;\r\nexport const MaxToolLevel = 4;\r\nexport type Tool = {\r\n    speed: number,\r\n    damage: number\r\n}\r\n\r\nconst tools: { [key: string]: Tool }  = {\r\n    \"1\": {\r\n        speed: 16,\r\n        damage: 2\r\n    },\r\n    \"2\": {\r\n        speed: 16,\r\n        damage: 4\r\n    },\r\n    \"3\": {\r\n        speed: 10,\r\n        damage: 3\r\n    },\r\n    \"4\": {\r\n        speed: 14,\r\n        damage: 8\r\n    },\r\n    \"5\": {\r\n        speed: 5,\r\n        damage: 20\r\n    },\r\n}\r\n\r\nexport class Player extends Entity {\r\n    audio: Audio\r\n    \r\n    wire: Vector2\r\n    inventory: {\r\n        totalCount: number\r\n        slots: {\r\n            [key: string]: {\r\n                count: number\r\n                instances: Item[]\r\n            }\r\n        }\r\n    }\r\n    toolLevel: ToolLevel\r\n    hasBottle: boolean\r\n\r\n    damageAnimatedOpacity: number\r\n    \r\n    constructor() {\r\n        super(\"player\", \"player-stay\", {\r\n            position: new Vector2(Config.WORLD_WIDTH * Config.SPRITE_SIZE / 2, -Config.SPRITE_SIZE)\r\n        });\r\n    \r\n        this.audio = new Audio();\r\n        \r\n        this.wire = this.position.expand();\r\n        this.inventory = {\r\n            totalCount: 0,\r\n            slots: {}\r\n        };\r\n        this.hasBottle = false;\r\n        this.toolLevel = 5;\r\n\r\n        this.damageAnimatedOpacity = 0;\r\n\r\n        window.addEventListener(\"keydown\", e=> {\r\n            if (e.code == \"KeyT\") {\r\n                this.moveSpeed = this.moveSpeed == 5 ? 90 : 5;\r\n                this.collider.collidable = !this.collider.collidable;\r\n            }\r\n        })\r\n    }\r\n    \r\n    init(game: Game) {\r\n        super.init(game);\r\n        \r\n        this.collider.width = 10 * Config.SPRITE_SCALE;\r\n        this.collider.height = 10 * Config.SPRITE_SCALE;\r\n        this.collider.offset = new Vector2(3, 0);\r\n\r\n        // Set robot\r\n        game.gamepad.onKeyDown(this.id, \"enter\", ()=> {\r\n            this.placeRobot(game);\r\n        });\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        if (!this.allowMove) return;\r\n\r\n        this.movement.set((+game.gamepad.keys.right - +game.gamepad.keys.left), (+game.gamepad.keys.down - +game.gamepad.keys.up));\r\n        this.move();\r\n        this.pullWire();\r\n\r\n        // Foot steps\r\n        this.footsStep(game);\r\n\r\n        // Slow\r\n        // this.moveSpeed = this.checkItemInInventory(\"raw-nerius\") ? 2 : 5;\r\n        \r\n        // Dig\r\n        const tool = tools[this.toolLevel.toString()];\r\n\r\n        if (this.movement.x != 0)\r\n            this.dig(game, tool.damage, tool.speed, this.toolLevel, this.movement.x > 0 ? \"right\" : \"left\");\r\n        else if (this.movement.y != 0)\r\n            this.dig(game, tool.damage, tool.speed, this.toolLevel, this.movement.y > 0 ? \"bottom\" : \"top\");\r\n\r\n        //\r\n        this.damageAnimatedOpacity = lerp(this.damageAnimatedOpacity, 0, .05);\r\n\r\n        this.bounds();\r\n    }\r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n        \r\n        this.renderUI(game, renderer);    \r\n    }\r\n    renderUI(game: Game, renderer: Renderer) {\r\n        const size = Config.SPRITE_SIZE;\r\n        const windowCenter = new Vector2(innerWidth / 2, innerHeight / 2);\r\n\r\n        // Place robot text\r\n        if (this.checkItemInInventory(\"item-robot\"))\r\n            renderer.drawText({\r\n                text: \"[OK] - установить\",\r\n                position: new Vector2(0, 150).add(windowCenter),\r\n                layer: \"ui\"\r\n            });\r\n        \r\n        // Tool level\r\n        renderer.drawSprite({\r\n            texture: asImage(game.getAssetByName(\"tools\")),\r\n            position: new Vector2(size, innerHeight - size),\r\n            layer: \"ui\"\r\n        });\r\n        renderer.drawText({\r\n            text: this.toolLevel + \"ур.\",\r\n            position: new Vector2(size, innerHeight - size).add(Vector2.all(size * .3)),\r\n            font: \"22px Pixel\",\r\n            layer: \"ui\"\r\n        });\r\n\r\n        // Bottle\r\n        if (this.hasBottle)\r\n            renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName(\"bottle\")),\r\n                position: new Vector2(size * 2 + 20, innerHeight - size),\r\n                layer: \"ui\"\r\n            })\r\n\r\n        // Damage vignette\r\n        renderer.drawSprite({\r\n            texture: asImage(game.getAssetByName(\"damage\")),\r\n            width: innerWidth / Config.SPRITE_SIZE,\r\n            height: innerHeight / Config.SPRITE_SIZE,\r\n            position: new Vector2(innerWidth / 2, innerHeight / 2),\r\n            layer: \"ui\",\r\n            opacity: this.damageAnimatedOpacity\r\n        });\r\n    }\r\n\r\n    bounds() {\r\n        // World bounds\r\n        const worldWidth = Math.floor((Config.WORLD_WIDTH * Config.SPRITE_SIZE));\r\n        \r\n        // By width\r\n        if (this.position.x < 0)\r\n            this.position.x = 0\r\n        else if (this.position.x > worldWidth)\r\n            this.position.x = worldWidth\r\n        \r\n        // Dome bounds\r\n        const halfDiameter = Config.DOME_DIAMETER / 2;\r\n\r\n        if (this.position.x > Config.WORLD_X_CENTER - halfDiameter + 40 && this.position.x < Config.WORLD_X_CENTER + halfDiameter - 40) {\r\n            if (this.position.y < -Config.SPRITE_SIZE / 2) {\r\n        \r\n                if (this.position.y < -Config.GROUND_HEIGHT) {\r\n                    this.position.y = -Config.GROUND_HEIGHT;\r\n                }\r\n                if (this.position.x < Config.WORLD_X_CENTER - halfDiameter + 48)\r\n                    this.position.x = Config.WORLD_X_CENTER - halfDiameter + 48;\r\n                if (this.position.x > Config.WORLD_X_CENTER + halfDiameter - 48)\r\n                    this.position.x = Config.WORLD_X_CENTER + halfDiameter - 48;\r\n\r\n            }\r\n\r\n        } else {\r\n            // By height\r\n            if (this.position.y < -Config.SPRITE_SIZE / 2)\r\n                this.position.y = -Config.SPRITE_SIZE / 2;\r\n        }\r\n    }\r\n    \r\n    pickup(game: Game, item: Item, type: string, count: number) {\r\n        this.inventory.totalCount += count;\r\n\r\n        this.inventory.slots[type] = this.inventory.slots[type] || { count: 0, instances: [] };\r\n        this.inventory.slots[type].count += count;\r\n        const instances = this.inventory.slots[type].instances;\r\n        this.inventory.slots[type].instances.push(item);\r\n            \r\n        this.inventory.slots[type].instances = instances.filter((i, index)=> instances.indexOf(i) == index);\r\n    }\r\n    pullWire() {\r\n        \r\n        if (this.position.distance(this.wire) > Config.WIRE_LENGTH) {\r\n            this.wire.copy(this.wire.add(this.position.sub(this.wire).normalize().mul(this.moveSpeed)));\r\n        }\r\n\r\n    }\r\n    hit(game: Game, damage: number) {\r\n        this.hp -= damage;\r\n        this.damageAnimatedOpacity = 1.5;\r\n        game.camera.shake();\r\n    }\r\n    upgradeTool(levelUp: number) {\r\n        if (this.toolLevel < MaxToolLevel)\r\n            this.toolLevel += levelUp;\r\n    }\r\n    checkItemInInventory(name: string) {\r\n        return this.inventory.slots[name] && this.inventory.slots[name].count > 0\r\n    }\r\n    placeRobot(game: Game) {\r\n        if (!this.checkItemInInventory(\"item-robot\")) return;\r\n\r\n        // Sub. robots count in inventory\r\n        this.inventory.slots[\"item-robot\"].count --;\r\n\r\n        // Remove robot inventory instance\r\n        game.removeChildById(this.inventory.slots[\"item-robot\"].instances[0].id);\r\n        this.inventory.slots[\"item-robot\"].instances.splice(0, 1);\r\n        \r\n        // Place robot\r\n        game.add(new Robot(this.position.div(Config.SPRITE_SIZE).add(Vector2.all(.5)).apply(Math.floor).mul(Config.SPRITE_SIZE)));\r\n        game.initChildren();\r\n    }\r\n    footsStep(game: Game) {\r\n\r\n        const allow = \r\n            (this.velocity.x > 0 && !this.collider.collidesWith?.right) ||\r\n            (this.velocity.x < 0 && !this.collider.collidesWith?.left) ||\r\n            (this.velocity.y < 0 && !this.collider.collidesWith?.top) ||\r\n            (this.velocity.y > 0 && !this.collider.collidesWith?.bottom)\r\n        \r\n        if (game.clock.elapsed % 20 == 0 && allow) {\r\n            this.audio.play(game, `step-${ Math.floor(random(1, 4)) }`)\r\n\r\n            if (this.audio.audio)\r\n                this.audio.audio.volume = .5;\r\n            \r\n        }\r\n\r\n    }\r\n}","import { Config } from \"../config\";\r\nimport { Game, Sprite } from \"../engine\";\r\nimport { Vector2 } from \"../engine/utils/math\";\r\nimport { Player } from \"../objects/entities/Player\";\r\n\r\nexport function initLevel(game: Game) {\r\n\r\n    const ground = game.add<Sprite>(new Sprite(\"ground\", \"ground\", {\r\n        width: 4,\r\n        height: 4,\r\n        position: new Vector2(-Config.SPRITE_SIZE * 10, -Config.SPRITE_SIZE * .5 * 3),\r\n        repeat: Math.round(Config.WORLD_WIDTH) + 2,\r\n        layer: \"bg\"\r\n    }));\r\n\r\n    function update(player: Player) {\r\n\r\n        const op = (1 - player.position.y / 240) * .3;\r\n        ground.opacity = op > 0 ? op : 0;\r\n\r\n    }\r\n\r\n    return { update };\r\n\r\n}","import { chance, lerp, random, Vector2 } from \"../../engine/utils/math\";\r\nimport { Game, Sprite } from \"../../engine\";\r\nimport { Config, Color, OreSettings } from \"../../config\";\r\nimport { Player, ToolLevel } from \"../entities/Player\";\r\nimport { SpawnParticles } from \"../../engine/components/Particles\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { Raw } from \"../raws/Raw\";\r\nimport { Audio } from \"../../engine/components/Audio\";\r\n\r\nexport type OreType =\r\n    \"stone\" | \"stony-ground\" | \"deep-stone\" | \"destrony\" | \"manty\" |\r\n    \"cracked-stone\" | \"basalt\" | \"burnt-basalt\" |\r\n    \"cidium\" | \"osmy\" | \"antin\" | \"rady\" | \"nerius\";\r\n\r\nexport class Ore extends Sprite {\r\n    audio: Audio\r\n    \r\n    oreType: OreType\r\n    inChunkId: string\r\n\r\n    hp: number\r\n    tilePosition: Vector2\r\n    unbreakable: boolean\r\n    needToolLevel: ToolLevel\r\n    \r\n    particlesColors: string[]\r\n    animatedScale: number\r\n    darkenFactor: number\r\n    randomRotate: boolean\r\n    randomFlipX: boolean\r\n\r\n    constructor(type: OreType, position: Vector2) {\r\n        super(`ore-${ type }`, type, {\r\n            position: position.add(new Vector2(0, 0)).mul(Config.SPRITE_PIXEL_SIZE * Config.SPRITE_SCALE),\r\n            colliderType: \"solid\"\r\n        });\r\n\r\n        this.audio = new Audio();\r\n        \r\n        this.oreType = type;\r\n        this.tilePosition = position\r\n        this.inChunkId = \"\";\r\n        \r\n        const settings = OreSettings[type];\r\n        this.hp = settings ? settings.hp : OreSettings[\"stone\"].hp;\r\n        this.needToolLevel = OreSettings[type]?.tool || 1;\r\n        this.unbreakable = false;\r\n        \r\n        this.particlesColors = [Color.BLACK];\r\n        this.animatedScale = 1;\r\n        this.darkenFactor = 1;\r\n        this.randomRotate = true;\r\n        this.randomFlipX = true;\r\n    }\r\n    \r\n    init(game: Game) {\r\n        super.init(game);\r\n        \r\n        if (this.randomRotate)\r\n            this.rotation = Math.floor(random(1, 5)) * Math.PI;\r\n        if (this.randomFlipX)\r\n            this.flip.x = Boolean(Math.floor(random(0, 2)));\r\n\r\n        if (Config.ALLOW_DARK)\r\n            this.visible = false;\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        \r\n        this.animatedScale = lerp(this.animatedScale, 1, .2);\r\n        this.scale.set(this.animatedScale, this.animatedScale);\r\n        \r\n        // this.collideWidth(game, game.getChildById<Player>(\"player\"));\r\n    }\r\n    \r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n        \r\n        if (Config.ALLOW_DARK)\r\n            this.darken(game);\r\n    }\r\n    hit(game: Game, damage: number, toolLevel: ToolLevel) {\r\n        // Break audio\r\n        if (this.hp > 0)\r\n            this.audio.play(game, \"stone-hit\");\r\n        \r\n        if (this.unbreakable || toolLevel < this.needToolLevel) return;\r\n\r\n        this.hp -= damage;\r\n        this.animatedScale = .8;\r\n        SpawnParticles(game, this.position, {\r\n            colors: this.particlesColors,\r\n            size: [.2, .5],\r\n            count: 6,\r\n            box: ()=> new Vector2(random(-Config.SPRITE_SIZE / 2, Config.SPRITE_SIZE / 2), random(-Config.SPRITE_SIZE / 2, Config.SPRITE_SIZE / 2))\r\n        });\r\n\r\n        if (this.hp <= 0) {\r\n            this.onBreak(game);\r\n            // Destroy audio\r\n            this.audio.play(game, \"stone-break\");\r\n        }\r\n\r\n\r\n    }\r\n    onBreak(game: Game) {\r\n\r\n        SpawnParticles(game, this.position, {\r\n            colors: this.particlesColors,\r\n        });\r\n        game.removeChildById(this.id);\r\n        game.generator.destroyOre(this.inChunkId);\r\n\r\n    }\r\n    dropRawOre(game: Game, rawOre: typeof Raw | any, chancePercent?: number) {\r\n        let drop = true;\r\n        \r\n        if (chancePercent)\r\n            drop = chance(chancePercent);\r\n            \r\n        if (!drop) return;\r\n        game.add<typeof rawOre>(new (rawOre as any)(this.position.add(new Vector2(random(-10, 10), random(-10, 10)))));\r\n        game.initChildren();\r\n    }\r\n\r\n    darken(game: Game) {\r\n\r\n        // const player = game.getChildById<Player>(\"player\");\r\n        // if (!player) return;\r\n        \r\n        const t = 1 - game.camera.position.y / 200;\r\n        const d = (game.camera.position.distance(this.position) - 200);\r\n        this.darkenFactor = (d > 96 ? 1 : d / 96) + (t > 0 ? t : 0);\r\n        \r\n        if (this.darkenFactor < 1)\r\n            this.opacity = 1 - this.darkenFactor;\r\n            // game.renderer.drawRect(\r\n            //     // `rgba(255, 0, 0, ${ this.darkenFactor })`,\r\n            //     `rgba(15, 21, 49, ${ this.darkenFactor > 0 ? this.darkenFactor : 0  })`,\r\n            //     1, 1,\r\n            //     this.position, 0,\r\n            // );\r\n        this.visible = this.darkenFactor < .9;\r\n\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Stone extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"stone\", position);\r\n        \r\n        // this.hp = 10;\r\n    }\r\n}","import { Config } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { SpawnParticles } from \"../../engine/components/Particles\";\r\nimport { random, Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore, OreType } from \"./Ore\";\r\n\r\nexport class FallingOre extends Ore {\r\n    elapsedBeforeFall: number\r\n    allowFall: boolean\r\n    willFall: boolean\r\n    allowGravity: boolean\r\n    \r\n    constructor(type: OreType, position: Vector2) {\r\n        super(type, position);\r\n\r\n        this.elapsedBeforeFall = 0;\r\n        this.allowFall = false;\r\n        this.willFall = false;\r\n        this.allowGravity = false;\r\n    }\r\n\r\n    init(game: Game) {\r\n        super.init(game);\r\n        \r\n        this.acceleration.y = .9;\r\n    }\r\n    update(game: Game) {\r\n        super.update(game);\r\n\r\n        \r\n        // game.getChildrenByName<Ore>(\"ore\").filter(ore=> this.id != ore.id).map(ore=> {\r\n            \r\n        //     const collide = game.physics.collide(this, ore);\r\n\r\n        //     this.allowGravity = !collide.bottom;\r\n                // this.offset.set(0, 20);\r\n\r\n            // [0] - x\r\n            // [1] - y\r\n            // [2] - chunk x\r\n            // [3] - chunk y\r\n            // const oreChunkPos = ore.inChunkId.split(\"-\").map(n=> +n);\r\n            // const thisChunkPos = this.inChunkId.split(\"-\").map(n=> +n);\r\n\r\n            // if (thisChunkPos[2] == oreChunkPos[2] && thisChunkPos[3] == oreChunkPos[3]) {\r\n\r\n            //     if (thisChunkPos[1] + 1 != oreChunkPos[1] && thisChunkPos[0] == oreChunkPos[0])\r\n            //         this.offset.set(0, 20);\r\n\r\n            // }\r\n            // this.allowGravity = !(this.position.y > ore.position.y - Config.SPRITE_SIZE && ((this.position.x + Config.SPRITE_SIZE) > (ore.position.x - Config.SPRITE_SIZE)) && ore.position.x > this.position.x);\r\n            // const collide = game.physics.collide(this, ore);\r\n            // this.allowGravity = !collide.any;\r\n            \r\n            // this.collider.collidesWith = collide;\r\n            // this.collideWidth(game, ore);\r\n        // })\r\n\r\n        // this.gravity(game, this.allowGravity);\r\n        // console.log(this.collider.collidesWith?.bottom);\r\n        // this.gravity(game, !this.collider.collidesWith?.bottom);\r\n    }\r\n\r\n    gravity(game: Game, allow: boolean) {\r\n\r\n\r\n        // if (!this.collider.collidesWith?.bottom && this.collider.collidesWith?.id) {\r\n        // if (!this.collider.collidesWith?.bottom) {\r\n        if (allow) {\r\n\r\n            // if (!this.willFall) {\r\n            //     this.crumble(game);\r\n            //     this.willFall = true;\r\n            // }\r\n\r\n            // if (!this.allowFall) {\r\n            //     if ((game.clock.elapsed - this.elapsedBeforeFall) % Config.ORE_FALL_DELAY == 0)\r\n            //         this.allowFall = true;\r\n            // } else {\r\n                this.velocity.y ++;\r\n                // this.collider.type = \"dynamic\";\r\n            // }\r\n\r\n        } else {\r\n            this.velocity.y = 0;\r\n            // this.allowFall = false;\r\n            // this.willFall = false;\r\n            // this.elapsedBeforeFall = game.clock.elapsed;\r\n            // this.collider.type = \"solid\";\r\n        }\r\n        // this.collider.collidable = this.collider.collidesWith?.bottom || false;\r\n\r\n        // this.collider.collidesWith = null;\r\n\r\n    }\r\n\r\n    crumble(game: Game) {\r\n        SpawnParticles(game, this.position.add(new Vector2(0, 40)), {\r\n            velocity: ()=> new Vector2(random(-2, 2), 0),\r\n            box: ()=> new Vector2(random(-40, 40), 0),\r\n            count: 5,\r\n        });\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { FallingOre } from \"./FallingORe\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class CrackedStone extends FallingOre {\r\n    constructor(position: Vector2) {\r\n        super(\"cracked-stone\", position);\r\n\r\n        // this.hp = 6;\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class DeepStone extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"deep-stone\", position);\r\n        this.randomRotate = false;\r\n        // this.needToolLevel = 2;\r\n        // this.hp = 26\r\n    }\r\n}","import { Config } from \"../../config\";\r\nimport { Game, Sprite } from \"../../engine\";\r\nimport { random, Vector2, compareNames } from \"../../engine/utils/math\";\r\nimport { Player } from \"../entities/Player\";\r\nimport { Item } from \"../item/Item\";\r\n\r\nexport type RawType = \r\n    \"raw-cidium\" | \"raw-osmy\" | \"raw-grade-cidium\" | \"raw-antin\" |\r\n    \"raw-rady\" | \"raw-nerius\" | \"raw-manty\";\r\n\r\nexport class Raw extends Item {\r\n    rawType: RawType\r\n    foldToPosition: Vector2\r\n    \r\n    constructor(type: RawType, position: Vector2) {\r\n        super(`${ type }`, type, position);\r\n\r\n        this.rawType = type;\r\n        this.foldToPosition = Vector2.zero();\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n\r\n        if (!this.allowPickup) {\r\n            this.moveTo(this.foldToPosition);\r\n            if (this.foldToPosition.distance(this.position) < 30)\r\n                game.removeChildById(this.id);\r\n        }\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Raw } from \"./Raw\";\r\n\r\nexport class RawCidium extends Raw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-cidium\", position);\r\n    }\r\n}","import { Color } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { RawCidium } from \"../raws/RawCidium\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Cidium extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"cidium\", position);\r\n\r\n        // this.hp = 20;\r\n        this.particlesColors = [Color.BLACK, Color.YELLOW];\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawCidium);\r\n    }\r\n}","import { buildName } from \"./engine/utils/math\";\r\n\r\ntype NameType = {\r\n    name: string\r\n    desc: string\r\n    special?: string \r\n}\r\n\r\nconst prefixes = {\r\n    raw: \"Необработанный\"\r\n}\r\n\r\nexport const RawNames: { [key: string]: NameType } = {\r\n    \"raw-cidium\": {\r\n        name: buildName(prefixes.raw, \"цидиум\"),\r\n        desc: \"Жёлтая руда, которая непонятным образом выделяет энергию, если её правильно обработать. При этом её очень легко найти\",\r\n    },\r\n    \"raw-osmy\": {\r\n        name: buildName(prefixes.raw, \"осмий\"),\r\n        desc: \"Осмий, кристалы, которые также есть и на земле. Казалось бы, ничего интересного, но вместе с цидиумом, осмий будет очень полезен\",\r\n    },\r\n    \"raw-grade-cidium\": {\r\n        name: buildName(prefixes.raw, \"второсортный цидиум\"),\r\n        desc: \"Цидиум 2-го сорта, руда, иногда встречающаяся вместе с осмием\",\r\n    },\r\n    \"raw-antin\": {\r\n        name: buildName(prefixes.raw, \"антин\"),\r\n        desc: \"Антин, крайне странная руда, имеющая красный оттенок. Предположительно кристалы, которые миллионы лет назад из-за вулканической активности. Не зря они расположены ближе к мантии\",\r\n    },\r\n    \"raw-rady\": {\r\n        name: buildName(prefixes.raw, \"радий\"),\r\n        desc: \"Радий... Нам не удалось его подробно изучить. Известно только, то что он очень глубоко под землёй и излучает радиационный фон до 67.2 мк/ч, что выше нормы в 4 раза\",\r\n        special: \"> Требуется специальная колба для сбора!\"\r\n    },\r\n    \"raw-nerius\": {\r\n        name: buildName(prefixes.raw, \"нериус\"),\r\n        desc: \"Нериус, невероятно плотная руда, что значит она ещё и очень тяжёлая. 1см² весит около 300 грамм\",\r\n        special: \"> Довольно сильно замедляет вас!\"\r\n    },\r\n    \"raw-manty\": {\r\n        name: \"Мантий\",\r\n        desc: \"Мантий... Это то, для чего ты здесь. Но будь осторожен, он очень горячий, до 1200 С°\",\r\n        special: \"> Требуется специальная колба для сбора!\"\r\n    },\r\n}\r\nexport const GearNames: { [key: string]: NameType } = {\r\n    \"gear-storage\": {\r\n        name: \"Хранилище\",\r\n        desc: \"\"\r\n    },\r\n    \"gear-recycler\": {\r\n        name: \"Переработчик\",\r\n        desc: \"\"\r\n    },\r\n    \"gear-upgrader\": {\r\n        name: \"Улучшатель\",\r\n        desc: \"\"\r\n    },\r\n}\r\nexport const RecipeNames: { [key: string]: NameType } = {\r\n    \"storage-level-up\": {\r\n        name: \"Улучшить хранилище\",\r\n        desc: \"Улучшите своё хранилище для того, чтобы можно было хранить больше ресурсов и их типов.\"\r\n    },\r\n    \"tool-level-up\": {\r\n        name: \"Улучшить инструмент\",\r\n        desc: \"Для того чтобы быстрее ломать руду прокачайте свой инструмент. Более новые уровни инструмента позволяют добывать больше типов руд\"\r\n    },\r\n    \"bottle\": {\r\n        name: \"\\\"Специальная колба\\\"\",\r\n        desc: \"Колба для сбора особо опасных руд. На пример таких, как радий\"\r\n    },\r\n    \"robot\": {\r\n        name: \"Робот\",\r\n        desc: \"Ваш лисный робот-компаньон. Копает небольшой тунель вниз. Безсилен против базальта\"\r\n    },\r\n};","import { Config } from \"../../config\";\r\nimport { Game, ISpriteProps, Sprite } from \"../../engine\";\r\nimport { Audio } from \"../../engine/components/Audio\";\r\nimport { SpawnParticles } from \"../../engine/components/Particles\";\r\nimport { UI, Button } from \"../../engine/components/UI\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { asImage, assetIsValid, lerp, Vector2 } from \"../../engine/utils/math\";\r\nimport { GearNames } from \"../../names\";\r\nimport { Player } from \"../entities/Player\";\r\n\r\nexport type GearType = \r\n    \"gear-storage\" | \"gear-recycler\" | \"gear-upgrader\";\r\nexport type GearLevel = 1 | 2 | 3;\r\nexport const MaxGearLevel = 3;\r\n\r\nexport class Gear extends Sprite {\r\n    audio: Audio\r\n    ui: UI\r\n    interactButton: Button\r\n    player: Player | undefined\r\n\r\n    gearType: GearType;\r\n    level: GearLevel\r\n    playerIsNear: boolean\r\n    allowInteract: boolean\r\n\r\n    headerOffset: Vector2\r\n    interactText: string\r\n    closeText: string\r\n    \r\n    constructor(type: GearType, level: GearLevel, props?: ISpriteProps) {\r\n        super(type, [type, 1].join(\"-\"), props);\r\n\r\n        this.width = \r\n        this.height = 2;\r\n\r\n        this.audio = new Audio();\r\n        this.ui = new UI();\r\n        this.interactButton = new Button();\r\n        this.player = undefined;\r\n        \r\n        this.gearType = type;\r\n        this.level = level;\r\n        this.playerIsNear = false;\r\n        this.allowInteract = true;\r\n        this.layer = \"bg\";\r\n\r\n        this.headerOffset = new Vector2();\r\n        this.interactText = \"\";\r\n        this.closeText = \"закрыть\";\r\n    }\r\n\r\n    init(game: Game) {\r\n        super.init(game);\r\n\r\n        this.ui.init(game);\r\n        this.ui.enabled = false;\r\n        this.player = game.getChildById(\"player\");\r\n\r\n        game.gamepad.onKeyDown(this.id, \"enter\", ()=> {\r\n            if (!this.playerIsNear) return;\r\n\r\n            if (this.player)\r\n                this.onInteract(game);\r\n        });\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        \r\n        this.checkInteract();\r\n    }\r\n\r\n    render(game: Game, renderer: Renderer) {\r\n        super.render(game, renderer);\r\n\r\n        this.renderUI(game, renderer);\r\n\r\n        if (this.playerIsNear && this.allowInteract) {\r\n            const outlineAsset = game.getAssetByName([this.gearType, 1, \"outline\"].join(\"-\"));\r\n\r\n            // Draw gear outline\r\n            renderer.drawSprite({\r\n                texture: asImage(outlineAsset),\r\n                width: 2, height: 2,\r\n                position: this.position,\r\n                layer: this.layer,\r\n                flip: this.flip\r\n            });\r\n\r\n            renderer.drawText({\r\n                text: this.interactText,\r\n                font: \"22px Pixel\",\r\n                position: this.position.add(new Vector2(0, -70))\r\n            });\r\n                \r\n        }\r\n    }\r\n    renderUI(game: Game, renderer: Renderer) {\r\n        this.ui.render();\r\n\r\n        if (this.ui.enabled) {\r\n            const size = Config.SPRITE_SIZE;\r\n            const windowCenter = new Vector2(innerWidth / 2, innerHeight / 2).apply(Math.floor);\r\n\r\n            renderer.drawRect({\r\n                color: \"rgba(0, 0, 0, .6)\",\r\n                width: innerWidth / Config.SPRITE_SIZE,\r\n                height: innerHeight / Config.SPRITE_SIZE,\r\n                position: new Vector2(innerWidth / 2, innerHeight / 2),\r\n                layer: \"ui\"\r\n            });\r\n\r\n            // Container\r\n            renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName([this.gearType.replace(\"gear-\", \"\"), \"ui\"].join(\"-\"))),\r\n                position: new Vector2(0, -size).add(windowCenter),\r\n                width: 7,\r\n                height: 5,\r\n                layer: \"ui\"\r\n            });\r\n            // Preview\r\n            renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName([this.gearType, 1].join(\"-\"))),\r\n                position: new Vector2(-size * 2, -size - 15).add(windowCenter).add(this.headerOffset),\r\n                width: 2,\r\n                height: 2,\r\n                layer: \"ui\"\r\n            });\r\n            // Title\r\n            renderer.drawText({\r\n                text: `${ GearNames[this.name].name } ${ this.level }ур.`,\r\n                position: new Vector2(-size * 1.2, -size - 15).add(windowCenter).add(this.headerOffset),\r\n                centered: false,\r\n                layer: \"ui\"\r\n            });\r\n            // Close\r\n            renderer.drawText({\r\n                text: `[OK] - ${ this.closeText }`,\r\n                position: new Vector2(-size * 3 + 20, -size * 2 - 40).add(windowCenter).add(this.headerOffset),\r\n                layer: \"ui\",\r\n                centered: false\r\n            })\r\n\r\n        }\r\n        \r\n        // Draw interact button\r\n        if (this.playerIsNear && !this.ui.enabled) {\r\n            this.interactButton.position = this.position.add(new Vector2(0, -110));\r\n            this.interactButton.render(game);\r\n        }\r\n    }\r\n\r\n    upgrade(game: Game, levelUp: number) {\r\n        if (this.level < MaxGearLevel) {\r\n            this.level += levelUp;\r\n\r\n            SpawnParticles(game, this.position, {\r\n                render: (renderer, part)=> {\r\n                    renderer.drawSprite({\r\n                        texture: asImage(game.getAssetByName(\"level-up\")),\r\n                        position: part.position,\r\n                        opacity: part.size,\r\n                        scale: Vector2.all(.8),\r\n                        layer: \"particles\"\r\n                    })\r\n                },\r\n                velocity: ()=> new Vector2(0, -1.5),\r\n                size: [5, 5],\r\n                downSize: .08,\r\n                count: 1,\r\n                gravity: 0\r\n            });\r\n        }\r\n    }\r\n    checkInteract() {\r\n        if (!this.player) return;\r\n\r\n        this.playerIsNear = this.player.position.distance(this.position) < Config.GEAR_INTERACT_DISTANCE;\r\n        if (this.playerIsNear)\r\n            this.player.allowMove = !this.ui.enabled;\r\n    }\r\n\r\n    onInteract(game: Game) {\r\n        this.interactButton.click();\r\n    }\r\n    \r\n}","import { Config } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { asImage, Vector2 } from \"../../engine/utils/math\";\r\nimport { MaxToolLevel } from \"../entities/Player\";\r\nimport { RobotItem } from \"../item/RobotItem\";\r\nimport { MaxGearLevel } from \"./Gear\";\r\nimport { Recipe, Recycler } from \"./Recycler\";\r\n\r\nconst recipes = (recycler: Recycler)=> ({\r\n    // Storage up\r\n    \"storage-level-up\": new Recipe({\r\n        recipe: ()=> [\r\n            { \"raw-cidium\": 1, \"raw-osmy\": 1 }, // Level 2\r\n            // { \"raw-cidium\": 6, \"raw-osmy\": 2 }, // Level 2\r\n            { \"raw-cidium\": 12, \"raw-osmy\": 6, \"raw-grade-cidium\": 2 }, // Level 3\r\n        ][recycler.storage.level - 1] as any,\r\n        // On craft\r\n        onCraft: (game: Game)=> {\r\n            recycler.storage.upgrade(game, 1);\r\n        },\r\n        // Render icon\r\n        icon: (game, pos)=> {\r\n            game.renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName(\"gear-storage-1\")),\r\n                position: pos,\r\n                width: 2,\r\n                height: 2,\r\n                scale: Vector2.all(.7),\r\n                layer: \"ui\"\r\n            });\r\n            game.renderer.drawText({\r\n                text: `${ recycler.storage.level + 1 }ур.`,\r\n                position: pos.add(Vector2.all(Config.SPRITE_SIZE * .3)),\r\n                layer: \"ui\"\r\n            });\r\n        },\r\n        isRemoved: ()=> recycler.storage.level >= MaxGearLevel\r\n    }),\r\n\r\n    // Tool up\r\n    \"tool-level-up\": new Recipe({\r\n        recipe: ()=> [\r\n            { \"raw-cidium\": 4  }, // Level 2\r\n            { \"raw-cidium\": 14, \"raw-osmy\": 4, \"raw-grade-cidium\": 1 }, // Level 3\r\n            { \"raw-cidium\": 2, \"raw-osmy\": 8, \"raw-grade-cidium\": 4, \"raw-antin\": 3 }, // Level 4\r\n        ][recycler.player ? recycler.player?.toolLevel - 1 : 0] as any,\r\n        onCraft: ()=> {\r\n            if (!recycler.player) return;\r\n\r\n            recycler.player.upgradeTool(1);\r\n        },\r\n        icon: (game, pos)=> {\r\n            if (!recycler.player) return;\r\n\r\n            game.renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName(\"tools\")),\r\n                position: pos,\r\n                layer: \"ui\"\r\n            });\r\n            game.renderer.drawText({\r\n                text: `${ recycler.player.toolLevel + 1 }ур.`,\r\n                position: pos.add(Vector2.all(Config.SPRITE_SIZE * .3)),\r\n                layer: \"ui\"\r\n            });\r\n        },\r\n        isRemoved: ()=> recycler.player ? recycler.player.toolLevel >= MaxToolLevel : false\r\n    }),\r\n\r\n    // Craft bottle\r\n    \"bottle\": new Recipe({\r\n        recipe: ()=> ({ \"raw-osmy\": 8, \"raw-antin\": 4, \"raw-nerius\": 3 } as any),\r\n        onCraft: ()=> {\r\n            if (!recycler.player) return\r\n\r\n            recycler.player.hasBottle = true;\r\n        },\r\n        icon: (game, pos)=> {\r\n            game.renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName(\"bottle\")),\r\n                position: pos,\r\n                width: .8,\r\n                height: .8,\r\n                layer: \"ui\"\r\n            });\r\n        },\r\n        isRemoved: ()=> recycler.player ? recycler.player.hasBottle : false\r\n    }),\r\n\r\n    // Craft robot\r\n    \"robot\": new Recipe({\r\n        // recipe: ()=> ({ \"raw-osmy\": 6, \"raw-cidium\": 12, \"raw-nerius\": 5 } as any),\r\n        recipe: ()=> ({ \"raw-osmy\": 1, \"raw-cidium\": 1, \"raw-nerius\": 1 } as any),\r\n        onCraft: (game)=> {\r\n            game.add(new RobotItem(recycler.position))\r\n            game.initChildren();\r\n        },\r\n        icon: (game, pos)=> {\r\n            game.renderer.drawSprite({\r\n                texture: asImage(game.getAssetByName(\"robot-stay\")),\r\n                position: pos,\r\n                layer: \"ui\"\r\n            });\r\n        },\r\n        isRemoved: ()=> recycler.player ? recycler.player.hasBottle : false\r\n    }),\r\n    \r\n});\r\n\r\nexport default recipes;","import { Color, Config } from \"../../config\";\r\nimport { Game, ISpriteProps } from \"../../engine\";\r\nimport { Button } from \"../../engine/components/UI\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { asImage, Vector2 } from \"../../engine/utils/math\";\r\nimport { GearNames, RawNames, RecipeNames } from \"../../names\";\r\nimport { MaxToolLevel, Player } from \"../entities/Player\";\r\nimport { Gear, GearLevel, MaxGearLevel } from \"./Gear\";\r\nimport recipes from \"./recipes\";\r\nimport { Storage } from \"./Storage\";\r\n\r\nexport class Recycler extends Gear {\r\n    storage: Storage\r\n    recipes: { [key: string]: Recipe }\r\n    \r\n    constructor(level: GearLevel, storage: Storage, props?: ISpriteProps) {\r\n        super(\"gear-recycler\", level, props);\r\n\r\n        this.ui.focused.slot = 1;\r\n        this.ui.focused.row = 10;\r\n\r\n        this.storage = storage;\r\n        this.recipes = recipes(this);\r\n    }\r\n    \r\n    onInteract(game: Game) {\r\n        super.onInteract(game);\r\n\r\n        // Open\r\n        this.ui.enabled = true;\r\n        \r\n        // Close\r\n        if (this.ui.focused.slot == 0 && this.ui.focused.row == 0 && this.ui.enabled) {\r\n            this.ui.enabled = false;\r\n        \r\n            this.ui.focused.slot = 1;\r\n            this.ui.focused.row = 10;\r\n\r\n        }\r\n\r\n        if (this.ui.enabled && this.ui.focused.slot == 1 && this.ui.focused.row == 10) {\r\n            this.ui.focused.slot = 0;\r\n            this.ui.focused.row = 0;\r\n        }\r\n\r\n        if (this.ui.focused.row == 1) {\r\n            \r\n            const recipesKeys = this.getRecipesKeys();\r\n            const recipe = this.recipes[recipesKeys[this.ui.focused.slot]];\r\n            \r\n            // Craft\r\n            if (recipe.canCraft(this.storage)) {\r\n                recipe.onCraft(game, this.storage);\r\n                this.ui.enabled = false;\r\n                this.audio.play(game, \"craft\");\r\n            } else {\r\n                this.ui.spawnMessageText(game, \"Недостатачно ресурсов\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderUI(game: Game, renderer: Renderer) {\r\n        super.renderUI(game, renderer);\r\n\r\n        const recipesKeys = this.getRecipesKeys();\r\n\r\n        this.closeText = (this.ui.focused.row == 0 && this.ui.focused.slot == 0) ? \"закрыть\" : \"изготовить\";\r\n\r\n        this.ui.allowSelectSlots = true;\r\n        this.ui.updateTemplate([\r\n            1,\r\n            recipesKeys.length,\r\n        ]);\r\n        if (!this.ui.enabled) return;\r\n\r\n        this.renderRecipesUI(recipesKeys, game, renderer);\r\n\r\n        if (this.ui.focused.row != 1) return;\r\n        \r\n        // Get recipe by focused slot\r\n        const currentRecipe = this.recipes[recipesKeys[this.ui.focused.slot]];\r\n        const recipeDescription = RecipeNames[recipesKeys[this.ui.focused.slot]];\r\n\r\n        if (!recipeDescription) return;\r\n\r\n        const selectedRecipe = this.recipes[recipesKeys[this.ui.focused.slot]].recipe();\r\n        const isInStockCount = (slotName: string)=> this.storage.contains.slots[slotName];\r\n        \r\n        this.ui.renderDescriptionUI({\r\n            title: recipeDescription.name,\r\n            titleColor: currentRecipe.canCraft(this.storage) ? \"#fff\" : Color.RED,\r\n            specials: [\r\n                \"Ресурсы:\",\r\n                ...Object.keys(selectedRecipe).map(slotName=> {\r\n                    const count = isInStockCount(slotName);\r\n                    const recipeItem = RawNames[slotName];\r\n                    return `> ${ recipeItem?.name || \"ERROR\" } ${ count || 0 } из ${ selectedRecipe[slotName] }`\r\n                })\r\n            ],\r\n            description: recipeDescription.desc,\r\n            renderIcon: (pos)=> {\r\n                currentRecipe.icon(game, pos);   \r\n            }\r\n        }, game, renderer);\r\n    }\r\n\r\n    renderRecipesUI(recipes: string[], game: Game, renderer: Renderer) {\r\n        const size = Config.SPRITE_SIZE;\r\n        const windowCenter = new Vector2(innerWidth / 2, innerHeight / 2).apply(Math.floor);\r\n        \r\n        const closePosition = new Vector2(size * 1.5 + 20, -size - 20).add(windowCenter);\r\n        this.ui.renderSlot(closePosition, 0, 0, ()=> {\r\n\r\n            renderer.drawSprite({\r\n                // texture: asImage(game.getAssetByName(\"close\")),\r\n                texture: asImage(game.getAssetByName(\"button\")),\r\n                position: closePosition,\r\n                width: 2,\r\n                layer: \"ui\"\r\n            });\r\n            renderer.drawText({\r\n                text: \"Закрыть\",\r\n                position: closePosition,\r\n                layer: \"ui\"\r\n            });\r\n\r\n        }, 1.75);\r\n        \r\n        recipes.map((recipeName, index)=> {\r\n\r\n            // Render recipe\r\n            const pos = new Vector2(index * size - size * 2, 0).add(windowCenter);\r\n            this.ui.renderSlot(pos, 1, index, ()=> {\r\n\r\n                // Render recipe icon\r\n                this.recipes[recipeName].icon(game, pos);\r\n                \r\n                // Darken\r\n                if (!this.recipes[recipeName].canCraft(this.storage))\r\n                    renderer.drawRect({\r\n                        position: pos,\r\n                        color: Color.STONE_LAYER_COLOR,\r\n                        layer: \"ui\",\r\n                        opacity: .5,\r\n                        width: .95,\r\n                        height: .95,\r\n                    });\r\n\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getRecipesKeys(): string[] {\r\n        return Object.keys(this.recipes).filter(name=> !this.recipes[name].isRemoved())\r\n    }\r\n}\r\n\r\nexport class Recipe {\r\n    recipe: ()=> Storage[\"contains\"][\"slots\"]\r\n    _onCraft: (game: Game)=> void\r\n    isRemoved: ()=> boolean\r\n    icon: (game: Game, pos: Vector2)=> void\r\n    \r\n    constructor(props: {\r\n        recipe: Recipe[\"recipe\"]\r\n        onCraft: Recipe[\"_onCraft\"]\r\n        icon: Recipe[\"icon\"]\r\n        isRemoved?: Recipe[\"isRemoved\"]\r\n    }) {\r\n        this.recipe = props.recipe;\r\n        this._onCraft = props.onCraft;\r\n        this.icon = props.icon;\r\n        this.isRemoved = props.isRemoved || (()=> false);\r\n    }\r\n\r\n    canCraft(storage: Storage): boolean {\r\n        const recipes = Object.keys(this.recipe());\r\n        // let can = false;\r\n        let hasCount = 0;\r\n\r\n        for (let i = 0; i < recipes.length; i ++) {\r\n            if (storage.contains.slots[recipes[i]] >= this.recipe()[recipes[i]])\r\n                hasCount ++;\r\n        }\r\n        \r\n        return hasCount >= recipes.length;\r\n        // return can;\r\n    }\r\n    onCraft(game: Game, storage: Storage) {\r\n        const recipes = Object.keys(this.recipe());\r\n\r\n        for (let i = 0; i < recipes.length; i ++) {\r\n            storage.contains.slots[recipes[i]] -= this.recipe()[recipes[i]];\r\n        }\r\n\r\n        this._onCraft(game);\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Raw } from \"./Raw\";\r\n\r\nexport class RawAntin extends Raw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-antin\", position);\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Raw } from \"./Raw\";\r\n\r\nexport class RawGradeCidium extends Raw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-grade-cidium\", position);\r\n    }\r\n}","import { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { Player } from \"../entities/Player\";\r\nimport { Raw } from \"./Raw\";\r\n\r\nexport class RawNerius extends Raw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-nerius\", position);\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n\r\n        // const player = game.getChildById<Player>(\"player\");\r\n        // if (!player) return;\r\n\r\n        // player.moveSpeed = this.picked ? 2 : 5;\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Raw } from \"./Raw\";\r\n\r\nexport class RawOsmy extends Raw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-osmy\", position);\r\n    }\r\n}","import { Game } from \"../../engine\";\r\nimport { random, Vector2 } from \"../../engine/utils/math\";\r\nimport { Player } from \"../entities/Player\";\r\nimport { Raw, RawType } from \"./Raw\";\r\n\r\nexport class DangerRaw extends Raw {\r\n    constructor(type: RawType, position: Vector2) {\r\n        super(type, position);\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        \r\n        const player = game.getChildById<Player>(\"player\");\r\n        if (!player) return;\r\n        if (player.hasBottle) return;\r\n\r\n        // If is picked, player get damage (1-2)\r\n        if (game.clock.elapsed % 80 == 0 && this.picked)\r\n            player.hit(game, Math.floor(random(1, 3)));\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { DangerRaw } from \"./DangerRaw\";\r\n\r\nexport class RawRady extends DangerRaw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-rady\", position);\r\n    }\r\n}","import { RawAntin } from \"./objects/raws/RawAntin\";\r\nimport { RawCidium } from \"./objects/raws/RawCidium\";\r\nimport { RawGradeCidium } from \"./objects/raws/RawGradeCidium\";\r\nimport { RawNerius } from \"./objects/raws/RawNerius\";\r\nimport { RawOsmy } from \"./objects/raws/RawOsmy\";\r\nimport { RawRady } from \"./objects/raws/RawRady\";\r\n\r\nexport const Raws: { [key: string]: any }  = {\r\n    \"raw-cidium\": RawCidium,\r\n    \"raw-osmy\": RawOsmy,\r\n    \"raw-grade-cidium\": RawGradeCidium,\r\n    \"raw-antin\": RawAntin,\r\n    \"raw-rady\": RawRady,\r\n    \"raw-nerius\": RawNerius,\r\n};","import { Color, Config, ItemSettings, OreSettings } from \"../../config\";\r\nimport { Game, ISpriteProps } from \"../../engine\";\r\nimport { Renderer } from \"../../engine/Renderer\";\r\nimport { asImage, Vector2 } from \"../../engine/utils/math\";\r\nimport { RawNames } from \"../../names\";\r\nimport { Raws } from \"../../objects\";\r\nimport { Player } from \"../entities/Player\";\r\nimport { Raw } from \"../raws/Raw\";\r\nimport { Gear, GearLevel } from \"./Gear\";\r\n\r\ntype InteractType = \"store\" | \"view\";\r\nenum MaxStorageTotalCount {\r\n    \"1-level\" = 18,\r\n    \"2-level\" = 28,\r\n    \"3-level\" = 42,\r\n}\r\n\r\nexport class Storage extends Gear {\r\n    contains: {\r\n        totalCount: number\r\n        slots: {\r\n            [key: string]: number\r\n        }\r\n    }\r\n    interactType: InteractType\r\n    maxTotalCount: number\r\n    maxRowItemsCount: number\r\n    selectedSlotIndex: number\r\n    \r\n    constructor(level: GearLevel, props?: ISpriteProps) {\r\n        super(\"gear-storage\", level, props);\r\n        \r\n        this.contains = { totalCount: 0, slots: {} };\r\n        this.interactType = \"view\";\r\n        this.maxTotalCount = MaxStorageTotalCount[`${ level }-level`];\r\n        this.headerOffset = new Vector2(0, -Config.SPRITE_SIZE);\r\n        this.maxRowItemsCount = 5;\r\n        this.selectedSlotIndex = 0;\r\n    }\r\n\r\n    update(game: Game) {\r\n        super.update(game);\r\n        \r\n        if (!this.player) return;\r\n        \r\n        this.interactType = (\r\n            this.player.inventory.totalCount == 0 ||\r\n            this.contains.totalCount >= this.maxTotalCount ||\r\n            this.filterRaws(this.player.inventory.slots).length == this.filterRaws(this.player.inventory.slots).filter(name=> ItemSettings[name].storage > this.level).length\r\n        ) ? \"view\" : \"store\";\r\n        this.interactText = this.interactType == \"view\" ? \"Содержимое\" : \"Сложить\";\r\n        this.ui.allowSelectSlots = this.ui.enabled;\r\n        if (this.ui.focused.row == 1)\r\n            this.selectedSlotIndex = this.ui.focused.slot;\r\n    }\r\n\r\n    onInteract(game: Game) {\r\n        super.onInteract(game);\r\n\r\n        if (this.ui.enabled && this.ui.focused.row == 0 && this.ui.focused.slot == 0) {\r\n            const slotName = this.filterRaws(this.contains.slots)[this.selectedSlotIndex];\r\n            this.drop(game, slotName, 1)\r\n            return;\r\n        }\r\n        \r\n        if (this.interactType == \"store\") {\r\n            this.ui.enabled = false;\r\n            this.store(game);\r\n        } else if (this.interactType == \"view\") {\r\n            if (!this.ui.enabled) {\r\n                this.ui.focused.row = 1;\r\n                this.ui.focused.slot = 0;\r\n            }\r\n            this.ui.enabled = !this.ui.enabled;\r\n            if (this.ui.enabled)\r\n                this.audio.play(game, \"storage\");\r\n        }        \r\n\r\n    }\r\n    upgrade(game: Game, levelUp: number) {\r\n        super.upgrade(game, levelUp);\r\n\r\n        this.maxTotalCount = MaxStorageTotalCount[`${ this.level }-level`];\r\n    }\r\n\r\n    store(game: Game) {\r\n        if (this.contains.totalCount >= this.maxTotalCount || !this.player) return;\r\n        \r\n        let storedCount = 0;\r\n        let totalStoredCount = 0;\r\n        const slotNames = this.filterRaws(this.player.inventory.slots).filter(name=> ItemSettings[name].storage <= this.level);\r\n        // Storage level less then need\r\n        if (this.filterRaws(this.player.inventory.slots).filter(name=> ItemSettings[name].storage > this.level).length > 0)\r\n            this.player.spawnText(game, \"Низкий уровень\\nхранилища\", new Vector2(0, -90));\r\n        \r\n        slotNames.map(slot=> {\r\n            if (!this.player) return;\r\n            \r\n            this.contains.slots[slot] = this.contains.slots[slot] || 0\r\n            \r\n            // Add items\r\n            if (this.contains.totalCount >= this.maxTotalCount) {\r\n                this.player.spawnText(game, \"Хранилище перепольнено\", new Vector2(0, -50));\r\n                return;\r\n            }\r\n\r\n            const rawInstances = this.player.inventory.slots[slot].instances;\r\n            \r\n            for (let i = 0; i < rawInstances.length; i ++) {\r\n                if (rawInstances[i] && rawInstances[i].picked) {\r\n                    rawInstances[i].allowPickup = false;\r\n                    rawInstances[i].picked = false;\r\n                    rawInstances[i].name.indexOf(\"raw\") >= 0 ? (rawInstances[i] as Raw).foldToPosition = this.position : 0;\r\n                }\r\n            }\r\n\r\n            storedCount = this.player.inventory.slots[slot].count + this.contains.totalCount <= this.maxTotalCount ? this.player.inventory.slots[slot].count : (this.maxTotalCount - this.contains.totalCount);\r\n            this.contains.slots[slot] += storedCount;\r\n            this.contains.totalCount += storedCount;\r\n            totalStoredCount += storedCount;\r\n            this.player.inventory.totalCount -= storedCount;\r\n            this.player.inventory.slots[slot].count -= storedCount;\r\n        });\r\n        \r\n        if (slotNames.length <= 0) return;\r\n        \r\n        // Play store audio\r\n        this.audio.play(game, \"store\");\r\n        this.player.spawnText(game, totalStoredCount.toString());\r\n    }\r\n    drop(game: Game, slotName: string, count: number) {\r\n        if (!this.contains.slots[slotName]) return\r\n        \r\n        this.contains.slots[slotName] -= count;\r\n        this.contains.totalCount -= count;\r\n\r\n        game.add(new Raws[slotName](this.position));\r\n        game.initChildren();\r\n        this.audio.play(game, \"store\", false);\r\n    }\r\n\r\n    renderUI(game: Game, renderer: Renderer) {\r\n        super.renderUI(game, renderer);\r\n\r\n        if (!this.ui.enabled) return;\r\n\r\n        const slots = this.filterRaws(this.contains.slots);\r\n        this.ui.updateTemplate([\r\n            slots.length > 0 ? 1 : 0,\r\n            slots.length\r\n        ]);\r\n        if (!this.ui.template[0]) {\r\n            this.ui.focused.row = 1;\r\n            this.ui.focused.slot = 0;\r\n        }\r\n\r\n        this.closeText = (this.ui.focused.row == 0 && this.ui.focused.slot == 0) ? \"выбросить\" : \"закрыть\";\r\n            \r\n        this.renderInventoryUI(slots, game, renderer);\r\n\r\n        const name = slots[this.selectedSlotIndex]\r\n        const raw = RawNames[name];\r\n        if (!raw) return;\r\n        \r\n        const oreSettings = OreSettings[name.replace(\"raw-\", \"\")];\r\n        const special = [\r\n            oreSettings ? `> Нужен инструмент ${ oreSettings.tool || 1 }ур. и выше` : \"> Можно найти\",\r\n            raw.special || \"\"\r\n        ].filter(t=> t != \"\");\r\n\r\n        // Render description\r\n        this.ui.renderDescriptionUI({\r\n            title: raw.name,\r\n            specials: special,\r\n            description: raw.desc, \r\n            renderIcon: (pos)=> {\r\n                renderer.drawSprite({\r\n                    texture: asImage(game.getAssetByName(name)),\r\n                    position: pos,\r\n                    layer: \"ui\"\r\n                });\r\n            }\r\n        }, game, renderer);\r\n\r\n    }\r\n\r\n    renderInventoryUI(slots: string[], game: Game, renderer: Renderer) {\r\n        const size = Config.SPRITE_SIZE;\r\n        const windowCenter = new Vector2(innerWidth / 2, innerHeight / 2).apply(Math.floor);\r\n\r\n        if (slots.length != 0) {\r\n            const closePosition = new Vector2(size * 1.5 + 20, -size * 2 - 20).add(windowCenter);\r\n            this.ui.renderSlot(closePosition, 0, 0, ()=> {\r\n\r\n                renderer.drawSprite({\r\n                    // texture: asImage(game.getAssetByName(\"close\")),\r\n                    texture: asImage(game.getAssetByName(\"button\")),\r\n                    position: closePosition,\r\n                    width: 2,\r\n                    layer: \"ui\"\r\n                });\r\n                renderer.drawText({\r\n                    text: \"Выбросить x1\",\r\n                    position: closePosition,\r\n                    layer: \"ui\"\r\n                });\r\n\r\n            }, 1.75);\r\n        }\r\n\r\n        // Draw count text\r\n        renderer.drawText({\r\n            text: `${ this.contains.totalCount }/${ this.maxTotalCount }`,\r\n            position: new Vector2(-size * 1.2, -size * 2 + 10).add(windowCenter),\r\n            color: this.contains.totalCount >= this.maxTotalCount ? Color.RED : \"#fff\",\r\n            centered: false,\r\n            layer: \"ui\"\r\n        });\r\n\r\n        slots.map((slot, index)=> {\r\n            const isOverflow = index > this.maxRowItemsCount-1;\r\n\r\n            const pos = new Vector2(\r\n                (index * size) - size * Math.floor(this.maxRowItemsCount / 2) + (isOverflow ? -size * this.maxRowItemsCount : 0),\r\n                isOverflow ? size : 0\r\n            ).add(windowCenter).add(new Vector2(0, -size));\r\n\r\n            this.ui.renderSlot(pos, 1, index, ()=> {\r\n\r\n                // Draw item sprite\r\n                renderer.drawSprite({\r\n                    texture: asImage(game.getAssetByName(slot)),\r\n                    position: pos,\r\n                    layer: \"ui\"\r\n                });\r\n\r\n                // Draw item count text\r\n                renderer.drawText({\r\n                    text: this.contains.slots[slot].toString(),\r\n                    position: pos.add(Vector2.all(Config.SPRITE_SIZE * .3)),\r\n                    layer: \"ui\"\r\n                });\r\n                \r\n            }, 1, 1, this.selectedSlotIndex == index);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    filterRaws(slots: Player[\"inventory\"][\"slots\"] | Storage[\"contains\"][\"slots\"]) {\r\n        return Object.keys(slots).filter(name=> name.indexOf(\"raw\") >= 0 && ((slots[name] as any).count ? (slots[name] as any).count > 0 : slots[name] > 0));\r\n    }\r\n}","import { Config } from \"../config\";\r\nimport { Game, Sprite } from \"../engine\";\r\nimport { Vector2 } from \"../engine/utils/math\";\r\nimport { Recycler } from \"../objects/gear/Recycler\";\r\nimport { Storage } from \"../objects/gear/Storage\";\r\nimport { Upgrader } from \"../objects/gear/Upgrader\";\r\n\r\nexport function initDome(game: Game) {\r\n    const domePosition = new Vector2(Math.round(Config.WORLD_X_CENTER), -Config.SPRITE_SIZE * 1.5);\r\n\r\n    const storage = game.add<Storage>(new Storage(1, {\r\n        position: domePosition.add(new Vector2(-150, 0))\r\n    }));\r\n\r\n    // game.add<Sprite>(new Upgrader(1, {\r\n    //     flip: { x: true, y: false },\r\n    //     position: domePosition.add(new Vector2(50, -70))\r\n    // }));\r\n    game.add<Sprite>(new Recycler(1, storage, {\r\n        flip: { x: true, y: false },\r\n        position: domePosition.add(new Vector2(140, 0))\r\n    }));\r\n    \r\n    // Dome\r\n    game.add<Sprite>(new Sprite(\"dome\", \"dome\", {\r\n        width: 8,\r\n        height: 8,\r\n        position: domePosition,\r\n        layer: \"particles\"\r\n    }));\r\n\r\n}","import { Color } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { RawGradeCidium } from \"../raws/RawGradeCidium\";\r\nimport { RawOsmy } from \"../raws/RawOsmy\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Osmy extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"osmy\", position);\r\n\r\n        // this.needToolLevel = 2;\r\n        this.randomRotate = false;\r\n        // this.hp = 36;\r\n        this.particlesColors = [Color.BLACK, Color.BLUE];\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawOsmy);\r\n        this.dropRawOre(game, RawGradeCidium, 100);\r\n    }\r\n}","import { Color } from \"../../config\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Basalt extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"basalt\", position);\r\n\r\n        // this.needToolLevel = 3;\r\n        // this.hp = 40;\r\n        this.particlesColors = [Color.GREY];\r\n    }\r\n}","import { Color, Config } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { Player } from \"../entities/Player\";\r\nimport { RawAntin } from \"../raws/RawAntin\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Antin extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"antin\", position);\r\n\r\n        // this.needToolLevel = 3;\r\n        // this.hp = 52;\r\n        this.particlesColors = [Color.GREY, Color.RED];\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawAntin);\r\n    }\r\n}","import { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { Player, ToolLevel } from \"../entities/Player\";\r\nimport { Ore, OreType } from \"./Ore\";\r\n\r\nexport class DangerOre extends Ore {\r\n    constructor(type: OreType, position: Vector2) {\r\n        super(type, position);\r\n    }\r\n\r\n    hit(game: Game, damage: number, level: ToolLevel) {\r\n        super.hit(game, damage, level);\r\n\r\n        const player = game.getChildById<Player>(\"player\");\r\n        if (!player) return;\r\n\r\n        if (!player.hasBottle)\r\n            player.hit(game, 1);\r\n    }\r\n}","import { Color } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { RawRady } from \"../raws/RawRady\";\r\nimport { DangerOre } from \"./DangerOre\";\r\n\r\nexport class Rady extends DangerOre {\r\n    constructor(position: Vector2) {\r\n        super(\"rady\", position);\r\n\r\n        this.particlesColors = [Color.GREY, Color.GREEN];\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawRady);\r\n    }\r\n}","import { Color } from \"../../config\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class BurntBasalt extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"burnt-basalt\", position);\r\n\r\n        // this.needToolLevel = 4;\r\n        // this.hp = 80;\r\n        this.particlesColors = [Color.DARK_GREY];\r\n    }\r\n}","import { Color } from \"../../config\";\r\nimport { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { RawGradeCidium } from \"../raws/RawGradeCidium\";\r\nimport { RawNerius } from \"../raws/RawNerius\";\r\nimport { RawOsmy } from \"../raws/RawOsmy\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class Nerius extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"nerius\", position);\r\n\r\n        this.randomRotate = false;\r\n        this.particlesColors = [Color.BLACK, \"#fff\"];\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawNerius);\r\n        // this.dropRawOre(game, RawGradeCidium, 100);\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\";\r\n\r\nexport class StonyGround extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"stony-ground\", position);\r\n        \r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { Ore } from \"./Ore\"\r\n\r\nexport class Destrony extends Ore {\r\n    constructor(position: Vector2) {\r\n        super(\"destrony\", position);\r\n        this.unbreakable = true;\r\n        this.randomRotate = false;\r\n    }\r\n}","import { Vector2 } from \"../../engine/utils/math\";\r\nimport { DangerRaw } from \"./DangerRaw\";\r\n\r\nexport class RawManty extends DangerRaw {\r\n    constructor(position: Vector2) {\r\n        super(\"raw-manty\", position);\r\n    }\r\n}","import { Game } from \"../../engine\";\r\nimport { Vector2 } from \"../../engine/utils/math\";\r\nimport { RawManty } from \"../raws/RawManty\";\r\nimport { DangerOre } from \"./DangerOre\";\r\n\r\nexport class Manty extends DangerOre {\r\n    constructor(position: Vector2) {\r\n        super(\"manty\", position);\r\n\r\n        this.randomRotate = false;\r\n    }\r\n\r\n    onBreak(game: Game) {\r\n        super.onBreak(game);\r\n\r\n        this.dropRawOre(game, RawManty);\r\n\r\n    }\r\n}","import { initAssets } from \"./managers/assets\";\r\nimport { Game } from \"./engine\";\r\nimport { Player } from \"./objects/entities/Player\";\r\nimport { SpawnParticles } from \"./engine/components/Particles\";\r\nimport { initLevel } from \"./managers/level\";\r\nimport { Stone } from \"./objects/ores/Stone\";\r\nimport { CrackedStone } from \"./objects/ores/CrackedStone\";\r\nimport { Config, GeneratorConfig } from \"./config\";\r\nimport { DeepStone } from \"./objects/ores/DeepStone\";\r\nimport { Cidium } from \"./objects/ores/Cidium\";\r\nimport { initDome } from \"./managers/dome\";\r\nimport { Osmy } from \"./objects/ores/Osmy\";\r\nimport { Basalt } from \"./objects/ores/Basalt\";\r\nimport { Vector2 } from \"./engine/utils/math\";\r\nimport { Antin } from \"./objects/ores/Antin\";\r\nimport { Rady } from \"./objects/ores/Rady\";\r\nimport { BurntBasalt } from \"./objects/ores/BurntBasalt\";\r\nimport { Nerius } from \"./objects/ores/Nerius\";\r\nimport { StonyGround } from \"./objects/ores/StonyGround\";\r\nimport { Robot } from \"./objects/entities/Robot\";\r\nimport { Destrony } from \"./objects/ores/Destrony\";\r\nimport { Manty } from \"./objects/ores/Manty\";\r\n\r\nconst game = new Game();\r\n\r\nconst player = game.add<Player>(new Player());\r\n// const robot = game.add<Robot>(new Robot(new Vector2(Config.WORLD_WIDTH * Config.SPRITE_SIZE / 2 - Config.SPRITE_SIZE / 2, Config.SPRITE_SIZE)));\r\nconst level = initLevel(game);\r\n\r\nlet lastLoop = Date.now();\r\nlet fps = 0;\r\n\r\ngame.addInit(()=> {\r\n    \r\n    initAssets(game);\r\n    initDome(game);\r\n    \r\n    game.generator.settings = [\r\n        // > Stones\r\n        {\r\n            value: [0, 1],\r\n            height: [0, 43],\r\n            ore: Stone,\r\n        },\r\n        {\r\n            value: [.5, .6],\r\n            height: [5, 90],\r\n            divider: 5,\r\n            ore: CrackedStone\r\n        },\r\n        {\r\n            value: [.5, .6],\r\n            height: [0, 14],\r\n            divider: 5,\r\n            ore: StonyGround\r\n        },\r\n\r\n        // > Deepest stones\r\n        // Deep stone blend layer\r\n        {\r\n            value: [.8, 1],\r\n            height: [30, 43],\r\n            divider: 2,\r\n            ore: DeepStone\r\n        },\r\n        // Deep stone layer\r\n        {\r\n            value: [0, 1],\r\n            height: [42, GeneratorConfig.BASALT_LAYER_HEIGHT],\r\n            ore: DeepStone\r\n        },\r\n\r\n        // Basalt blend layer\r\n        {\r\n            value: [.7, 1],\r\n            height: [GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT, GeneratorConfig.BASALT_LAYER_HEIGHT],\r\n            divider: 3,\r\n            ore: Basalt\r\n        },\r\n        // Basalt layer\r\n        {\r\n            value: [0, 1],\r\n            height: [GeneratorConfig.BASALT_LAYER_HEIGHT, GeneratorConfig.BURNT_BASALT_LAYER_HEIGHT],\r\n            ore: Basalt\r\n        },\r\n\r\n        // Burnt basalt blend layer\r\n        {\r\n            value: [.8, 1],\r\n            height: [GeneratorConfig.BURNT_BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT, GeneratorConfig.BURNT_BASALT_LAYER_HEIGHT],\r\n            divider: 3,\r\n            ore: BurntBasalt\r\n        },\r\n        // Burnt basalt layer\r\n        {\r\n            value: [0, 1],\r\n            height: [GeneratorConfig.BURNT_BASALT_LAYER_HEIGHT, Config.WORLD_HEIGHT],\r\n            ore: BurntBasalt\r\n        },\r\n        // > Destrony layer\r\n        {\r\n            value: [0, 1],\r\n            height: [Config.WORLD_HEIGHT, Config.WORLD_HEIGHT],\r\n            ore: Destrony\r\n        },\r\n        \r\n        // > Ores\r\n        // Cidium\r\n        {\r\n            value: [.85, 1],\r\n            // height: [12, Config.WORLD_HEIGHT - 10],\r\n            height: [0, GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT * 3],\r\n            divider: 5,\r\n            ore: Cidium\r\n        },\r\n\r\n        // Osmy - deep stone layer\r\n        {\r\n            value: [.95, 1],\r\n            // height: [50, GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT],\r\n            height: [0, GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT],\r\n            divider: .8,\r\n            ore: Osmy\r\n        },\r\n        {\r\n            value: [.95, 1],\r\n            height: [0, GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT],\r\n            // height: [100, GeneratorConfig.BASALT_LAYER_HEIGHT - GeneratorConfig.LAYERS_BLEND_HEIGHT],\r\n            divider: 5,\r\n            ore: Nerius\r\n        },\r\n        \r\n        // Antin - basalt layer\r\n        {\r\n            value: [0, .35],\r\n            height: [0, Config.WORLD_HEIGHT - 40],\r\n            // height: [GeneratorConfig.BASALT_LAYER_HEIGHT + 10, Config.WORLD_HEIGHT - 22],\r\n            divider: .9,\r\n            ore: Antin\r\n        },\r\n        // Rady - basalt layer\r\n        {\r\n            value: [0, .3],\r\n            height: [0, Config.WORLD_HEIGHT - 5],\r\n            // height: [200, Config.WORLD_HEIGHT - 5],\r\n            divider: 2,\r\n            ore: Rady\r\n        },\r\n        // > Manty layer\r\n        {\r\n            value: [0, .3],\r\n            height: [0, Config.WORLD_HEIGHT - 1],\r\n            // height: [Config.WORLD_HEIGHT - 5, Config.WORLD_HEIGHT - 1],\r\n            divider: 2,\r\n            ore: Manty\r\n        },\r\n        {\r\n            value: [0, .5],\r\n            height: [Config.WORLD_HEIGHT - 1, Config.WORLD_HEIGHT - 1],\r\n            divider: 2,\r\n            ore: Manty\r\n        },\r\n\r\n        // > Holes\r\n        {\r\n            value: [0, .5],\r\n            height: [5, 150],\r\n            ore: null,\r\n        },\r\n        {\r\n            value: [0, .4],\r\n            height: [155, Config.WORLD_HEIGHT - 40],\r\n            divider: 5,\r\n            ore: null,\r\n        },\r\n    ];\r\n    game.camera.follow(player.position);\r\n    \r\n});\r\ngame.addUpdate(()=> {\r\n    const thisLoop = Date.now();\r\n    if (game.clock.elapsed % 30 == 0)\r\n        fps = +(1000 / (thisLoop - lastLoop)).toFixed(1);\r\n    lastLoop = thisLoop;\r\n\r\n    level.update(player);\r\n    \r\n    game.camera.follow(player.position, .1);\r\n    game.generator.generateChunksAt(game.camera.position);\r\n});\r\ngame.addRender(renderer=> {\r\n\r\n    renderer.drawText({\r\n        text: fps.toString(),\r\n        font: \"20px Pixel\",\r\n        position: new Vector2(40, 40),\r\n        layer: \"ui\"\r\n    });\r\n    renderer.drawText({\r\n        text: `Height: ${ Math.floor(player.position.y / Config.SPRITE_SIZE + 1) }`,\r\n        font: \"20px Pixel\",\r\n        position: new Vector2(70, 80),\r\n        layer: \"ui\"\r\n    });\r\n\r\n});\r\n\r\ngame.init();\r\n\r\n// ! Debug\r\nwindow.addEventListener(\"keydown\", e=> {\r\n    \r\n    if (e.code == \"KeyG\")\r\n        console.log(game);\r\n    if (e.code == \"KeyP\")\r\n        SpawnParticles(game, game.camera.position);\r\n    if (e.code == \"KeyM\")\r\n        console.log(player);\r\n\r\n});\r\n"]}